"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/json-reduce";
exports.ids = ["vendor-chunks/json-reduce"];
exports.modules = {

/***/ "(ssr)/./node_modules/json-reduce/dist/reduce.js":
/*!*************************************************!*\
  !*** ./node_modules/json-reduce/dist/reduce.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.SKIP = SKIP;\nexports.reduce = reduce;\nexports.withCustomPathSegment = exports.SKIP_MARKER = void 0;\nfunction _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n        for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nfunction _typeof(obj) {\n    if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        _typeof = function _typeof(obj) {\n            return typeof obj;\n        };\n    } else {\n        _typeof = function _typeof(obj) {\n            return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n    }\n    return _typeof(obj);\n}\nfunction defaultCreatePathSegment(value, index, outerValue) {\n    return index;\n}\nfunction getType(value) {\n    if (Array.isArray(value)) {\n        return \"array\";\n    }\n    return value === null ? \"null\" : _typeof(value);\n}\nvar SKIP_MARKER = {\n    _: \"SKIP_MARKER\"\n};\nexports.SKIP_MARKER = SKIP_MARKER;\nfunction SKIP(value) {\n    return [\n        SKIP_MARKER,\n        value\n    ];\n}\nfunction callReducer(acc, reducerFn, value, path) {\n    var returnVal = reducerFn(acc, value, path);\n    if (returnVal === SKIP) {\n        return [\n            true,\n            acc\n        ];\n    }\n    return Array.isArray(returnVal) && returnVal[0] === SKIP_MARKER ? [\n        true,\n        returnVal[1]\n    ] : [\n        false,\n        returnVal\n    ];\n} // eslint-disable-next-line no-use-before-define\nfunction reducePrimitive(acc, reducerFn, value, path) {\n    var _callReducer = callReducer(acc, reducerFn, value, path), _callReducer2 = _slicedToArray(_callReducer, 2), /* skipped by default */ nextAcc = _callReducer2[1];\n    return nextAcc;\n} // Reduce depth first\nfunction reduceObject(acc, reducerFn, object, path) {\n    var createPathSegment = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : defaultCreatePathSegment;\n    var _callReducer3 = callReducer(acc, reducerFn, object, path), _callReducer4 = _slicedToArray(_callReducer3, 2), skip = _callReducer4[0], nextAcc = _callReducer4[1];\n    return skip ? nextAcc : Object.keys(object).reduce(function(innerAcc, key) {\n        return reduceAny(innerAcc, reducerFn, object[key], path.concat(createPathSegment(object[key], key, object)), createPathSegment);\n    }, nextAcc);\n} // Reduce depth first\nfunction reduceArray(acc, reducerFn, array, path) {\n    var createPathSegment = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : defaultCreatePathSegment;\n    var _callReducer5 = callReducer(acc, reducerFn, array, path), _callReducer6 = _slicedToArray(_callReducer5, 2), skip = _callReducer6[0], nextAcc = _callReducer6[1];\n    return skip ? nextAcc : array.reduce(function(innerAcc, item, index) {\n        return reduceAny(innerAcc, reducerFn, item, path.concat(createPathSegment(item, index, array)), createPathSegment);\n    }, nextAcc);\n}\nfunction reduceAny(acc, reducerFn, val, path) {\n    var createPathSegment = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : defaultCreatePathSegment;\n    var type = getType(val);\n    if (type === \"object\") {\n        return reduceObject(acc, reducerFn, val, path, createPathSegment);\n    }\n    if (type === \"array\") {\n        return reduceArray(acc, reducerFn, val, path, createPathSegment);\n    }\n    return reducePrimitive(acc, reducerFn, val, path);\n}\nfunction reduce(value, reducerFn, initial) {\n    var createPathSegment = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : defaultCreatePathSegment;\n    return reduceAny(initial, reducerFn, value, [], createPathSegment);\n}\nvar withCustomPathSegment = function withCustomPathSegment(createPathSegment) {\n    return function(value, reducer, initial) {\n        return reduce(value, reducer, initial, createPathSegment);\n    };\n};\nexports.withCustomPathSegment = withCustomPathSegment;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/json-reduce/dist/reduce.js\n");

/***/ })

};
;
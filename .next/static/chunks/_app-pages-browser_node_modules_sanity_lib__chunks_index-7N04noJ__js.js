"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_sanity_lib__chunks_index-7N04noJ__js"],{

/***/ "(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/pairwise.js":
/*!********************************************************************!*\
  !*** ./node_modules/rxjs/dist/esm5/internal/operators/pairwise.js ***!
  \********************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pairwise: function() { return /* binding */ pairwise; }\n/* harmony export */ });\n/* harmony import */ var _util_lift__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/lift */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/lift.js\");\n/* harmony import */ var _OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./OperatorSubscriber */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/OperatorSubscriber.js\");\n\n\nfunction pairwise() {\n    return (0,_util_lift__WEBPACK_IMPORTED_MODULE_0__.operate)(function(source, subscriber) {\n        var prev;\n        var hasPrev = false;\n        source.subscribe((0,_OperatorSubscriber__WEBPACK_IMPORTED_MODULE_1__.createOperatorSubscriber)(subscriber, function(value) {\n            var p = prev;\n            prev = value;\n            hasPrev && subscriber.next([\n                p,\n                value\n            ]);\n            hasPrev = true;\n        }));\n    });\n} //# sourceMappingURL=pairwise.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9yeGpzL2Rpc3QvZXNtNS9pbnRlcm5hbC9vcGVyYXRvcnMvcGFpcndpc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXVDO0FBQ3lCO0FBQ3pELFNBQVNFO0lBQ1osT0FBT0YsbURBQU9BLENBQUMsU0FBVUcsTUFBTSxFQUFFQyxVQUFVO1FBQ3ZDLElBQUlDO1FBQ0osSUFBSUMsVUFBVTtRQUNkSCxPQUFPSSxTQUFTLENBQUNOLDZFQUF3QkEsQ0FBQ0csWUFBWSxTQUFVSSxLQUFLO1lBQ2pFLElBQUlDLElBQUlKO1lBQ1JBLE9BQU9HO1lBQ1BGLFdBQVdGLFdBQVdNLElBQUksQ0FBQztnQkFBQ0Q7Z0JBQUdEO2FBQU07WUFDckNGLFVBQVU7UUFDZDtJQUNKO0FBQ0osRUFDQSxvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL3J4anMvZGlzdC9lc201L2ludGVybmFsL29wZXJhdG9ycy9wYWlyd2lzZS5qcz8zNGNjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9wZXJhdGUgfSBmcm9tICcuLi91dGlsL2xpZnQnO1xuaW1wb3J0IHsgY3JlYXRlT3BlcmF0b3JTdWJzY3JpYmVyIH0gZnJvbSAnLi9PcGVyYXRvclN1YnNjcmliZXInO1xuZXhwb3J0IGZ1bmN0aW9uIHBhaXJ3aXNlKCkge1xuICAgIHJldHVybiBvcGVyYXRlKGZ1bmN0aW9uIChzb3VyY2UsIHN1YnNjcmliZXIpIHtcbiAgICAgICAgdmFyIHByZXY7XG4gICAgICAgIHZhciBoYXNQcmV2ID0gZmFsc2U7XG4gICAgICAgIHNvdXJjZS5zdWJzY3JpYmUoY3JlYXRlT3BlcmF0b3JTdWJzY3JpYmVyKHN1YnNjcmliZXIsIGZ1bmN0aW9uICh2YWx1ZSkge1xuICAgICAgICAgICAgdmFyIHAgPSBwcmV2O1xuICAgICAgICAgICAgcHJldiA9IHZhbHVlO1xuICAgICAgICAgICAgaGFzUHJldiAmJiBzdWJzY3JpYmVyLm5leHQoW3AsIHZhbHVlXSk7XG4gICAgICAgICAgICBoYXNQcmV2ID0gdHJ1ZTtcbiAgICAgICAgfSkpO1xuICAgIH0pO1xufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFpcndpc2UuanMubWFwIl0sIm5hbWVzIjpbIm9wZXJhdGUiLCJjcmVhdGVPcGVyYXRvclN1YnNjcmliZXIiLCJwYWlyd2lzZSIsInNvdXJjZSIsInN1YnNjcmliZXIiLCJwcmV2IiwiaGFzUHJldiIsInN1YnNjcmliZSIsInZhbHVlIiwicCIsIm5leHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/pairwise.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/sanity/lib/_chunks/index-7N04noJ_.js":
/*!***********************************************************!*\
  !*** ./node_modules/sanity/lib/_chunks/index-7N04noJ_.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ StructureToolBoundary; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-runtime.js\");\n/* harmony import */ var _sanity_ui__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @sanity/ui */ \"(app-pages-browser)/./node_modules/@sanity/ui/dist/index.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var sanity__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! sanity */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks/TransformPatches--weJct_U.js\");\n/* harmony import */ var sanity__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! sanity */ \"(app-pages-browser)/./node_modules/sanity/lib/index.esm.js\");\n/* harmony import */ var _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./StructureToolProvider-bB9pgLAp.js */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks/StructureToolProvider-bB9pgLAp.js\");\n/* harmony import */ var sanity_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! sanity/router */ \"(app-pages-browser)/./node_modules/sanity/lib/router.esm.js\");\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash/omit.js */ \"(app-pages-browser)/./node_modules/lodash/omit.js\");\n/* harmony import */ var lodash_omit_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash_omit_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/util/isObservable.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/from.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/of.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/firstValueFrom.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/concat.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/observable/never.js\");\n/* harmony import */ var _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! __barrel_optimize__?names=NEVER,ReplaySubject,concat,firstValueFrom,from,isObservable,of!=!rxjs */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/ReplaySubject.js\");\n/* harmony import */ var nanoid__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! nanoid */ \"(app-pages-browser)/./node_modules/nanoid/index.browser.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/publishReplay.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/refCount.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/switchMap.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/map.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/startWith.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/pairwise.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/scan.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! rxjs/operators */ \"(app-pages-browser)/./node_modules/rxjs/dist/esm5/internal/operators/distinctUntilChanged.js\");\n/* harmony import */ var _sanity_generate_help_url__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @sanity/generate-help-url */ \"(app-pages-browser)/./node_modules/@sanity/generate-help-url/dist/generate-help-url.esm.js\");\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash/isEqual.js */ \"(app-pages-browser)/./node_modules/lodash/isEqual.js\");\n/* harmony import */ var lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _sanity_uuid__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @sanity/uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _sanity_icons__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @sanity/icons */ \"(app-pages-browser)/./node_modules/@sanity/icons/dist/index.js\");\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! styled-components */ \"(app-pages-browser)/./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n/* harmony import */ var _TooltipDelayGroupProvider_MYd0Yb1I_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./TooltipDelayGroupProvider-MYd0Yb1I.js */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks/TooltipDelayGroupProvider-MYd0Yb1I.js\");\n/* harmony import */ var lodash_camelCase_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! lodash/camelCase.js */ \"(app-pages-browser)/./node_modules/lodash/camelCase.js\");\n/* harmony import */ var lodash_camelCase_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(lodash_camelCase_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var speakingurl__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! speakingurl */ \"(app-pages-browser)/./node_modules/speakingurl/index.js\");\n/* harmony import */ var speakingurl__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(speakingurl__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var lodash_uniqueId_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash/uniqueId.js */ \"(app-pages-browser)/./node_modules/lodash/uniqueId.js\");\n/* harmony import */ var lodash_uniqueId_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash_uniqueId_js__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var react_is__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-is */ \"(app-pages-browser)/./node_modules/react-is/index.js\");\n/* harmony import */ var lodash_uniq_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! lodash/uniq.js */ \"(app-pages-browser)/./node_modules/lodash/uniq.js\");\n/* harmony import */ var lodash_uniq_js__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(lodash_uniq_js__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var lodash_kebabCase_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! lodash/kebabCase.js */ \"(app-pages-browser)/./node_modules/lodash/kebabCase.js\");\n/* harmony import */ var lodash_kebabCase_js__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(lodash_kebabCase_js__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var lodash_find_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! lodash/find.js */ \"(app-pages-browser)/./node_modules/lodash/find.js\");\n/* harmony import */ var lodash_find_js__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(lodash_find_js__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var lodash_startCase_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! lodash/startCase.js */ \"(app-pages-browser)/./node_modules/lodash/startCase.js\");\n/* harmony import */ var lodash_startCase_js__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(lodash_startCase_js__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var is_hotkey__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! is-hotkey */ \"(app-pages-browser)/./node_modules/is-hotkey/lib/index.js\");\n/* harmony import */ var _sanity_util_paths__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @sanity/util/paths */ \"(app-pages-browser)/./node_modules/@sanity/util/lib/paths.esm.js\");\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$(), _s2 = $RefreshSig$(), _s3 = $RefreshSig$(), _s4 = $RefreshSig$(), _s5 = $RefreshSig$(), _s6 = $RefreshSig$(), _s7 = $RefreshSig$(), _s8 = $RefreshSig$(), _s9 = $RefreshSig$(), _s10 = $RefreshSig$(), _s11 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst emptyArray = [];\nfunction PaneRouterProvider(props) {\n    _s();\n    const { children, flatIndex, index, params, payload, siblingIndex } = props;\n    const { navigate, navigateIntent, resolvePathFromState } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)();\n    const routerState = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState)();\n    const { panes, expand } = (0,_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.usePaneLayout)();\n    const routerPaneGroups = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>(routerState == null ? void 0 : routerState.panes) || emptyArray, [\n        routerState == null ? void 0 : routerState.panes\n    ]);\n    const lastPane = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>panes == null ? void 0 : panes[panes.length - 2], [\n        panes\n    ]);\n    const groupIndex = index - 1;\n    const createNextRouterState = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((modifier)=>{\n        const currentGroup = routerPaneGroups[groupIndex] || [];\n        const currentItem = currentGroup[siblingIndex];\n        const nextGroup = modifier(currentGroup, currentItem);\n        const nextPanes = [\n            ...routerPaneGroups.slice(0, groupIndex),\n            nextGroup,\n            ...routerPaneGroups.slice(groupIndex + 1)\n        ];\n        const nextRouterState = {\n            ...routerState || {},\n            panes: nextPanes\n        };\n        return nextRouterState;\n    }, [\n        groupIndex,\n        routerPaneGroups,\n        routerState,\n        siblingIndex\n    ]);\n    const modifyCurrentGroup = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((modifier)=>{\n        const nextRouterState = createNextRouterState(modifier);\n        setTimeout(()=>navigate(nextRouterState), 0);\n        return nextRouterState;\n    }, [\n        createNextRouterState,\n        navigate\n    ]);\n    const createPathWithParams = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((nextParams)=>{\n        const nextRouterState = createNextRouterState((siblings, item)=>[\n                ...siblings.slice(0, siblingIndex),\n                {\n                    ...item,\n                    params: nextParams\n                },\n                ...siblings.slice(siblingIndex + 1)\n            ]);\n        return resolvePathFromState(nextRouterState);\n    }, [\n        createNextRouterState,\n        resolvePathFromState,\n        siblingIndex\n    ]);\n    const setPayload = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((nextPayload)=>{\n        modifyCurrentGroup((siblings, item)=>[\n                ...siblings.slice(0, siblingIndex),\n                {\n                    ...item,\n                    payload: nextPayload\n                },\n                ...siblings.slice(siblingIndex + 1)\n            ]);\n    }, [\n        modifyCurrentGroup,\n        siblingIndex\n    ]);\n    const setParams = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((nextParams)=>{\n        modifyCurrentGroup((siblings, item)=>[\n                ...siblings.slice(0, siblingIndex),\n                {\n                    ...item,\n                    params: nextParams\n                },\n                ...siblings.slice(siblingIndex + 1)\n            ]);\n    }, [\n        modifyCurrentGroup,\n        siblingIndex\n    ]);\n    const handleEditReference = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((_ref)=>{\n        let { id, parentRefPath, type, template } = _ref;\n        navigate({\n            panes: [\n                ...routerPaneGroups.slice(0, groupIndex + 1),\n                [\n                    {\n                        id,\n                        params: {\n                            template: template.id,\n                            parentRefPath: (0,_sanity_util_paths__WEBPACK_IMPORTED_MODULE_13__.toString)(parentRefPath),\n                            type\n                        },\n                        payload: template.params\n                    }\n                ]\n            ]\n        });\n    }, [\n        groupIndex,\n        navigate,\n        routerPaneGroups\n    ]);\n    const ctx = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>({\n            // Zero-based index (position) of pane, visually\n            index: flatIndex,\n            // Zero-based index of pane group (within URL structure)\n            groupIndex,\n            // Zero-based index of pane within sibling group\n            siblingIndex,\n            // Payload of the current pane\n            payload,\n            // Params of the current pane\n            params,\n            // Whether or not the pane has any siblings (within the same group)\n            hasGroupSiblings: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length > 1 : false,\n            // The length of the current group\n            groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n            // Current router state for the \"panes\" property\n            routerPanesState: routerPaneGroups,\n            // Curried StateLink that passes the correct state automatically\n            ChildLink: _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.ChildLink,\n            // Curried StateLink that pops off the last pane group\n            BackLink: _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.BackLink,\n            // A specialized `ChildLink` that takes in the needed props to open a\n            // referenced document to the right\n            ReferenceChildLink: _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.ReferenceChildLink,\n            // Similar to `ReferenceChildLink` expect without the wrapping component\n            handleEditReference,\n            // Curried StateLink that passed the correct state, but merges params/payload\n            ParameterizedLink: _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.ParameterizedLink,\n            // Replaces the current pane with a new one\n            replaceCurrent: function() {\n                let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n                modifyCurrentGroup(()=>[\n                        {\n                            id: opts.id || \"\",\n                            payload: opts.payload,\n                            params: opts.params || {}\n                        }\n                    ]);\n            },\n            // Removes the current pane from the group\n            closeCurrent: ()=>{\n                modifyCurrentGroup((siblings, item)=>siblings.length > 1 ? siblings.filter((sibling)=>sibling !== item) : siblings);\n            },\n            // Removes all panes to the right including current\n            closeCurrentAndAfter: function() {\n                let expandLast = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n                if (expandLast && lastPane) {\n                    expand(lastPane.element);\n                }\n                navigate({\n                    panes: [\n                        ...routerPaneGroups.slice(0, groupIndex)\n                    ]\n                }, {\n                    replace: true\n                });\n            },\n            // Duplicate the current pane, with optional overrides for payload, parameters\n            duplicateCurrent: (options)=>{\n                modifyCurrentGroup((siblings, item)=>{\n                    const duplicatedItem = {\n                        ...item,\n                        payload: (options == null ? void 0 : options.payload) || item.payload,\n                        params: (options == null ? void 0 : options.params) || item.params\n                    };\n                    return [\n                        ...siblings.slice(0, siblingIndex),\n                        duplicatedItem,\n                        ...siblings.slice(siblingIndex)\n                    ];\n                });\n            },\n            // Set the view for the current pane\n            setView: (viewId)=>{\n                const restParams = lodash_omit_js__WEBPACK_IMPORTED_MODULE_2___default()(params, \"view\");\n                return setParams(viewId ? {\n                    ...restParams,\n                    view: viewId\n                } : restParams);\n            },\n            // Set the parameters for the current pane\n            setParams,\n            // Set the payload for the current pane\n            setPayload,\n            // A function that returns a path with the given parameters\n            createPathWithParams,\n            // Proxied navigation to a given intent. Consider just exposing `router` instead?\n            navigateIntent\n        }), [\n        flatIndex,\n        groupIndex,\n        siblingIndex,\n        payload,\n        params,\n        routerPaneGroups,\n        handleEditReference,\n        setParams,\n        setPayload,\n        createPathWithParams,\n        navigateIntent,\n        modifyCurrentGroup,\n        lastPane,\n        navigate,\n        expand\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.PaneRouterContext.Provider, {\n        value: ctx,\n        children\n    });\n}\n_s(PaneRouterProvider, \"XoRUDKOm1Ypj3i9LKK1Wez/RvGc=\", false, function() {\n    return [\n        sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter,\n        sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState,\n        _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.usePaneLayout\n    ];\n});\n_c = PaneRouterProvider;\nclass PaneResolutionError extends Error {\n    constructor(_ref2){\n        let { message, context, helpId, cause } = _ref2;\n        super(message);\n        this.context = context;\n        this.helpId = helpId;\n        this.cause = cause;\n    }\n}\nconst randomIdCache = /* @__PURE__ */ new WeakMap();\nfunction assignId(obj) {\n    const cachedValue = randomIdCache.get(obj);\n    if (cachedValue) return cachedValue;\n    const id = (0,nanoid__WEBPACK_IMPORTED_MODULE_16__.nanoid)();\n    randomIdCache.set(obj, id);\n    return id;\n}\nconst isPromise = (thing)=>{\n    return !!thing && typeof (thing == null ? void 0 : thing.then) === \"function\";\n};\nconst isSerializable = (thing)=>{\n    if (!(0,sanity__WEBPACK_IMPORTED_MODULE_17__.isRecord)(thing)) return false;\n    return typeof thing.serialize === \"function\";\n};\nconst rethrowWithPaneResolutionErrors = (next)=>(unresolvedPane, context, flatIndex)=>{\n        try {\n            return next(unresolvedPane, context, flatIndex);\n        } catch (e) {\n            if (e instanceof PaneResolutionError) {\n                throw e;\n            }\n            throw new PaneResolutionError({\n                message: typeof (e == null ? void 0 : e.message) === \"string\" ? e.message : \"\",\n                context,\n                cause: e\n            });\n        }\n    };\nconst wrapWithPublishReplay = (next)=>function() {\n        return next(...arguments).pipe(// need to add publishReplay + refCount to ensure new subscribers always\n        // get an emission. without this, memoized observables may get stuck\n        // waiting for their first emissions resulting in a loading pane\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_18__.publishReplay)(1), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_19__.refCount)());\n    };\nfunction createPaneResolver(middleware) {\n    const resolvePane = rethrowWithPaneResolutionErrors(wrapWithPublishReplay(middleware((unresolvedPane, context, flatIndex)=>{\n        if (!unresolvedPane) {\n            throw new PaneResolutionError({\n                message: \"Pane returned no child\",\n                context,\n                helpId: \"structure-item-returned-no-child\"\n            });\n        }\n        if (isPromise(unresolvedPane) || (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_20__.isObservable)(unresolvedPane)) {\n            return (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_21__.from)(unresolvedPane).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_22__.switchMap)((result)=>resolvePane(result, context, flatIndex)));\n        }\n        if (isSerializable(unresolvedPane)) {\n            return resolvePane(unresolvedPane.serialize(context), context, flatIndex);\n        }\n        if (typeof unresolvedPane === \"function\") {\n            return resolvePane(unresolvedPane(context.id, context), context, flatIndex);\n        }\n        return (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_23__.of)(unresolvedPane);\n    })));\n    return resolvePane;\n}\nconst bindCache = /* @__PURE__ */ new WeakMap();\nfunction memoBind(obj, methodKey) {\n    const boundMethods = bindCache.get(obj) || /* @__PURE__ */ new Map();\n    if (boundMethods) {\n        const bound2 = boundMethods.get(methodKey);\n        if (bound2) return bound2;\n    }\n    const method = obj[methodKey];\n    if (typeof method !== \"function\") {\n        throw new Error(\"Expected property `\".concat(methodKey, \"` to be a function but got \").concat(typeof method, \" instead.\"));\n    }\n    const bound = method.bind(obj);\n    boundMethods.set(methodKey, bound);\n    bindCache.set(obj, boundMethods);\n    return bound;\n}\nasync function resolveIntent(options) {\n    const resolvedPaneCache = /* @__PURE__ */ new Map();\n    const memoize = (nextFn)=>(unresolvedPane, context, flatIndex)=>{\n            const key = unresolvedPane && \"\".concat(assignId(unresolvedPane), \"-\").concat(context.path.join(\"__\"));\n            const cachedResolvedPane = key && resolvedPaneCache.get(key);\n            if (cachedResolvedPane) return cachedResolvedPane;\n            const result = nextFn(unresolvedPane, context, flatIndex);\n            if (key) resolvedPaneCache.set(key, result);\n            return result;\n        };\n    const resolvePane = createPaneResolver(memoize);\n    const fallbackEditorPanes = [\n        [\n            {\n                id: \"__edit__\".concat(options.params.id),\n                params: {\n                    ...lodash_omit_js__WEBPACK_IMPORTED_MODULE_2___default()(options.params, [\n                        \"id\"\n                    ]),\n                    type: options.params.type\n                },\n                payload: options.payload\n            }\n        ]\n    ];\n    async function traverse(_ref3) {\n        let { currentId, flatIndex, intent, params, parent: parent1, path, payload, unresolvedPane, levelIndex, structureContext } = _ref3;\n        var _a;\n        if (!unresolvedPane) return [];\n        const { id: targetId, type: schemaTypeName, ...otherParams } = params;\n        const context = {\n            id: currentId,\n            splitIndex: 0,\n            parent: parent1,\n            path,\n            index: flatIndex,\n            params: {},\n            payload: void 0,\n            structureContext\n        };\n        const resolvedPane = await (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_24__.firstValueFrom)(resolvePane(unresolvedPane, context, flatIndex));\n        if (resolvedPane.type === \"document\" && resolvedPane.id === targetId) {\n            return [\n                {\n                    panes: [\n                        ...path.slice(0, path.length - 1).map((i)=>[\n                                {\n                                    id: i\n                                }\n                            ]),\n                        [\n                            {\n                                id: targetId,\n                                params: otherParams,\n                                payload\n                            }\n                        ]\n                    ],\n                    depthIndex: path.length,\n                    levelIndex\n                }\n            ];\n        }\n        if (// if the resolve pane's `canHandleIntent` returns true, then resolve\n        ((_a = resolvedPane.canHandleIntent) == null ? void 0 : _a.call(resolvedPane, intent, params, {\n            pane: resolvedPane,\n            index: flatIndex\n        })) || // if the pane's `canHandleIntent` did not return true, then match against\n        // this default case. we will resolve the intent if:\n        resolvedPane.type === \"documentList\" && // 1. the schema type matches (this required for the document to render)\n        resolvedPane.schemaTypeName === schemaTypeName && // 2. the filter is the default filter.\n        //\n        // NOTE: this case is to prevent false positive matches where the user\n        // has configured a more specific filter for a particular type. In that\n        // case, the user can implement their own `canHandleIntent` function\n        resolvedPane.options.filter === \"_type == $type\") {\n            return [\n                {\n                    panes: [\n                        // map the current path to router panes\n                        ...path.map((id)=>[\n                                {\n                                    id\n                                }\n                            ]),\n                        // then augment with the intents IDs and params\n                        [\n                            {\n                                id: params.id,\n                                params: otherParams,\n                                payload\n                            }\n                        ]\n                    ],\n                    depthIndex: path.length,\n                    levelIndex\n                }\n            ];\n        }\n        if (resolvedPane.type === \"list\" && resolvedPane.child && resolvedPane.items) {\n            return (await Promise.all(resolvedPane.items.map((item, nextLevelIndex)=>{\n                if (item.type === \"divider\") return Promise.resolve([]);\n                return traverse({\n                    currentId: item._id || item.id,\n                    flatIndex: flatIndex + 1,\n                    intent,\n                    params,\n                    parent: resolvedPane,\n                    path: [\n                        ...path,\n                        item.id\n                    ],\n                    payload,\n                    unresolvedPane: typeof resolvedPane.child === \"function\" ? memoBind(resolvedPane, \"child\") : resolvedPane.child,\n                    levelIndex: nextLevelIndex,\n                    structureContext\n                });\n            }))).flat();\n        }\n        return [];\n    }\n    const matchingPanes = await traverse({\n        currentId: \"root\",\n        flatIndex: 0,\n        levelIndex: 0,\n        intent: options.intent,\n        params: options.params,\n        parent: null,\n        path: [],\n        payload: options.payload,\n        unresolvedPane: options.rootPaneNode,\n        structureContext: options.structureContext\n    });\n    const closestPaneToRoot = matchingPanes.sort((a, b)=>{\n        if (a.depthIndex === b.depthIndex) return a.levelIndex - b.levelIndex;\n        return a.depthIndex - b.depthIndex;\n    })[0];\n    if (closestPaneToRoot) {\n        return closestPaneToRoot.panes;\n    }\n    return fallbackEditorPanes;\n}\nconst fallbackEditorChild = (nodeId, context)=>{\n    const id = nodeId.replace(/^__edit__/, \"\");\n    const { params, payload, structureContext: { resolveDocumentNode } } = context;\n    const { type, template } = params;\n    if (!type) {\n        throw new Error(\"Document type for document with ID \".concat(id, \" was not provided in the router params.\"));\n    }\n    let defaultDocumentBuilder = resolveDocumentNode({\n        schemaType: type,\n        documentId: id\n    }).id(\"editor\");\n    if (template) {\n        defaultDocumentBuilder = defaultDocumentBuilder.initialValueTemplate(template, payload);\n    }\n    return defaultDocumentBuilder.serialize();\n};\nfunction hashContext(context) {\n    var _a, _b;\n    return \"contextHash(\".concat(JSON.stringify({\n        id: context.id,\n        parentId: parent && assignId(parent),\n        path: context.path,\n        index: context.index,\n        splitIndex: context.splitIndex,\n        serializeOptionsIndex: (_a = context.serializeOptions) == null ? void 0 : _a.index,\n        serializeOptionsPath: (_b = context.serializeOptions) == null ? void 0 : _b.path\n    }), \")\");\n}\nconst hashResolvedPaneMeta = (meta)=>{\n    const normalized = {\n        type: meta.type,\n        id: meta.routerPaneSibling.id,\n        params: meta.routerPaneSibling.params || {},\n        payload: meta.routerPaneSibling.payload || null,\n        flatIndex: meta.flatIndex,\n        groupIndex: meta.groupIndex,\n        siblingIndex: meta.siblingIndex,\n        path: meta.path,\n        paneNode: meta.type === \"resolvedMeta\" ? assignId(meta.paneNode) : null\n    };\n    return \"metaHash(\".concat(JSON.stringify(normalized), \")\");\n};\nfunction resolvePaneTree(_ref4) {\n    let { unresolvedPane, flattenedRouterPanes, parent: parent2, path, resolvePane, structureContext } = _ref4;\n    const [current, ...rest] = flattenedRouterPanes;\n    const next = rest[0];\n    const context = {\n        id: current.routerPaneSibling.id,\n        splitIndex: current.siblingIndex,\n        parent: parent2,\n        path: [\n            ...path,\n            current.routerPaneSibling.id\n        ],\n        index: current.flatIndex,\n        params: current.routerPaneSibling.params || {},\n        payload: current.routerPaneSibling.payload,\n        structureContext\n    };\n    try {\n        return resolvePane(unresolvedPane, context, current.flatIndex).pipe(// this switch map receives a resolved pane\n        (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_22__.switchMap)((paneNode)=>{\n            const resolvedPaneMeta = {\n                type: \"resolvedMeta\",\n                ...current,\n                paneNode,\n                path: context.path\n            };\n            const loadingPanes = rest.map((i, restIndex)=>{\n                const loadingPanePath = [\n                    ...context.path,\n                    ...rest.slice(restIndex).map((_, currentIndex)=>\"[\".concat(i.flatIndex + currentIndex, \"]\"))\n                ];\n                const loadingPane = {\n                    type: \"loading\",\n                    path: loadingPanePath,\n                    paneNode: null,\n                    ...i\n                };\n                return loadingPane;\n            });\n            if (!rest.length) {\n                return (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_23__.of)([\n                    resolvedPaneMeta\n                ]);\n            }\n            let nextStream;\n            if (// the fallback editor case\n            next == null ? void 0 : next.routerPaneSibling.id.startsWith(\"__edit__\")) {\n                nextStream = resolvePaneTree({\n                    unresolvedPane: fallbackEditorChild,\n                    flattenedRouterPanes: rest,\n                    parent: parent2,\n                    path: context.path,\n                    resolvePane,\n                    structureContext\n                });\n            } else if (current.groupIndex === (next == null ? void 0 : next.groupIndex)) {\n                nextStream = resolvePaneTree({\n                    unresolvedPane,\n                    flattenedRouterPanes: rest,\n                    parent: parent2,\n                    path,\n                    resolvePane,\n                    structureContext\n                });\n            } else {\n                nextStream = resolvePaneTree({\n                    unresolvedPane: typeof paneNode.child === \"function\" ? memoBind(paneNode, \"child\") : paneNode.child,\n                    flattenedRouterPanes: rest,\n                    parent: paneNode,\n                    path: context.path,\n                    resolvePane,\n                    structureContext\n                });\n            }\n            return (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_25__.concat)(// we emit the loading panes first in a concat (this emits immediately)\n            (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_23__.of)([\n                resolvedPaneMeta,\n                ...loadingPanes\n            ]), // then whenever the next stream is done, the results will be combined.\n            nextStream.pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.map)((nextResolvedPanes)=>[\n                    resolvedPaneMeta,\n                    ...nextResolvedPanes\n                ])));\n        }));\n    } catch (e) {\n        if (e instanceof PaneResolutionError) {\n            if (e.context) {\n                console.warn(\"Pane resolution error at index \".concat(e.context.index).concat(e.context.splitIndex > 0 ? \" for split pane index \".concat(e.context.splitIndex) : \"\", \": \").concat(e.message).concat(e.helpId ? \" - see \".concat((0,_sanity_generate_help_url__WEBPACK_IMPORTED_MODULE_27__.generateHelpUrl)(e.helpId)) : \"\"), e);\n            }\n            if (e.helpId === \"structure-item-returned-no-child\") {\n                return (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_23__.of)([]);\n            }\n        }\n        throw e;\n    }\n}\nfunction createResolvedPaneNodeStream(_ref5) {\n    let { routerPanesStream, rootPaneNode, initialCacheState = {\n        cacheKeysByFlatIndex: [],\n        flattenedRouterPanes: [],\n        resolvedPaneCache: /* @__PURE__ */ new Map(),\n        resolvePane: ()=>_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_28__.NEVER\n    }, structureContext } = _ref5;\n    const resolvedPanes$ = routerPanesStream.pipe(// add in implicit \"root\" router pane\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.map)((rawRouterPanes)=>[\n            [\n                {\n                    id: \"root\"\n                }\n            ],\n            ...rawRouterPanes\n        ]), // create flattened router panes\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.map)((routerPanes)=>{\n        const flattenedRouterPanes = routerPanes.flatMap((routerPaneGroup, groupIndex)=>routerPaneGroup.map((routerPaneSibling, siblingIndex)=>({\n                    routerPaneSibling,\n                    groupIndex,\n                    siblingIndex\n                }))).map((i, index)=>({\n                ...i,\n                flatIndex: index\n            }));\n        return flattenedRouterPanes;\n    }), // calculate a \"diffIndex\" used for clearing the memo cache\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_29__.startWith)([]), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_30__.pairwise)(), (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.map)((_ref6)=>{\n        let [prev, curr] = _ref6;\n        for(let i = 0; i < curr.length; i++){\n            const prevValue = prev[i];\n            const currValue = curr[i];\n            if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default()(prevValue, currValue)) {\n                return {\n                    flattenedRouterPanes: curr,\n                    diffIndex: i\n                };\n            }\n        }\n        return {\n            flattenedRouterPanes: curr,\n            diffIndex: curr.length\n        };\n    }), // create the memoized `resolvePane` function and manage the memo cache\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_31__.scan)((acc, next)=>{\n        const { cacheKeysByFlatIndex, resolvedPaneCache } = acc;\n        const { flattenedRouterPanes, diffIndex } = next;\n        const beforeDiffIndex = cacheKeysByFlatIndex.slice(0, diffIndex + 1);\n        const afterDiffIndex = cacheKeysByFlatIndex.slice(diffIndex + 1);\n        const keysToKeep = new Set(beforeDiffIndex.flatMap((keySet)=>Array.from(keySet)));\n        const keysToDelete = afterDiffIndex.flatMap((keySet)=>Array.from(keySet)).filter((key)=>!keysToKeep.has(key));\n        for (const key of keysToDelete){\n            resolvedPaneCache.delete(key);\n        }\n        const memoize = (nextFn)=>(unresolvedPane, context, flatIndex)=>{\n                const key = unresolvedPane && \"\".concat(assignId(unresolvedPane), \"-\").concat(hashContext(context));\n                const cachedResolvedPane = key && resolvedPaneCache.get(key);\n                if (cachedResolvedPane) return cachedResolvedPane;\n                const result = nextFn(unresolvedPane, context, flatIndex);\n                if (!key) return result;\n                const cacheKeySet = cacheKeysByFlatIndex[flatIndex] || /* @__PURE__ */ new Set();\n                cacheKeySet.add(key);\n                cacheKeysByFlatIndex[flatIndex] = cacheKeySet;\n                resolvedPaneCache.set(key, result);\n                return result;\n            };\n        return {\n            flattenedRouterPanes,\n            cacheKeysByFlatIndex,\n            resolvedPaneCache,\n            resolvePane: createPaneResolver(memoize)\n        };\n    }, initialCacheState), // run the memoized, recursive resolving\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_22__.switchMap)((_ref7)=>{\n        let { flattenedRouterPanes, resolvePane } = _ref7;\n        return resolvePaneTree({\n            unresolvedPane: rootPaneNode,\n            flattenedRouterPanes,\n            parent: null,\n            path: [],\n            resolvePane,\n            structureContext\n        });\n    }));\n    return resolvedPanes$.pipe(// this diffs the previous emission with the current one. if there is a new\n    // loading pane at the same position where a previous pane already had a\n    // resolved value (looking at the IDs to compare), then return the previous\n    // pane instead of the loading pane\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_31__.scan)((prev, next)=>next.map((nextPane, index)=>{\n            const prevPane = prev[index];\n            if (!prevPane) return nextPane;\n            if (nextPane.type !== \"loading\") return nextPane;\n            if (prevPane.routerPaneSibling.id === nextPane.routerPaneSibling.id) {\n                return prevPane;\n            }\n            return nextPane;\n        }), []), // this prevents duplicate emissions\n    (0,rxjs_operators__WEBPACK_IMPORTED_MODULE_32__.distinctUntilChanged)((prev, next)=>{\n        if (prev.length !== next.length) return false;\n        for(let i = 0; i < next.length; i++){\n            const prevValue = prev[i];\n            const nextValue = next[i];\n            if (hashResolvedPaneMeta(prevValue) !== hashResolvedPaneMeta(nextValue)) {\n                return false;\n            }\n        }\n        return true;\n    }));\n}\nfunction useRouterPanesStream() {\n    _s1();\n    const routerStateSubject = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>new _barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_33__.ReplaySubject(1), []);\n    const routerPanes$ = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>routerStateSubject.asObservable().pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.map)((_routerState)=>(_routerState == null ? void 0 : _routerState.panes) || [])), [\n        routerStateSubject\n    ]);\n    const { state: routerState } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        routerStateSubject.next(routerState);\n    }, [\n        routerState,\n        routerStateSubject\n    ]);\n    return routerPanes$;\n}\n_s1(useRouterPanesStream, \"SeqP2DCqbNMj2ZF+5gs6rJtoZWY=\", false, function() {\n    return [\n        sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter\n    ];\n});\nfunction useResolvedPanes() {\n    _s2();\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)();\n    if (error) throw error;\n    const { structureContext, rootPaneNode } = (0,_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.useStructureTool)();\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        paneDataItems: [],\n        resolvedPanes: [],\n        routerPanes: []\n    });\n    const routerPanesStream = useRouterPanesStream();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const resolvedPanes$ = createResolvedPaneNodeStream({\n            rootPaneNode,\n            routerPanesStream,\n            structureContext\n        }).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_26__.map)((resolvedPanes)=>{\n            const routerPanes = resolvedPanes.reduce((acc, next)=>{\n                const currentGroup = acc[next.groupIndex] || [];\n                currentGroup[next.siblingIndex] = next.routerPaneSibling;\n                acc[next.groupIndex] = currentGroup;\n                return acc;\n            }, []);\n            const groupsLen = routerPanes.length;\n            const paneDataItems = resolvedPanes.map((pane)=>{\n                var _a;\n                const { groupIndex, flatIndex, siblingIndex, routerPaneSibling, path } = pane;\n                const itemId = routerPaneSibling.id;\n                const nextGroup = routerPanes[groupIndex + 1];\n                const paneDataItem = {\n                    active: groupIndex === groupsLen - 2,\n                    childItemId: (_a = nextGroup == null ? void 0 : nextGroup[0].id) != null ? _a : null,\n                    index: flatIndex,\n                    itemId: routerPaneSibling.id,\n                    groupIndex,\n                    key: \"\".concat(pane.type === \"loading\" ? \"unknown\" : pane.paneNode.id, \"-\").concat(itemId, \"-\").concat(siblingIndex),\n                    pane: pane.type === \"loading\" ? _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE : pane.paneNode,\n                    params: routerPaneSibling.params || {},\n                    path: path.join(\";\"),\n                    payload: routerPaneSibling.payload,\n                    selected: flatIndex === resolvedPanes.length - 1,\n                    siblingIndex\n                };\n                return paneDataItem;\n            });\n            return {\n                paneDataItems,\n                routerPanes,\n                resolvedPanes: paneDataItems.map((pane)=>pane.pane)\n            };\n        }));\n        const subscription = resolvedPanes$.subscribe({\n            next: (result)=>setData(result),\n            error: (e)=>setError(e)\n        });\n        return ()=>subscription.unsubscribe();\n    }, [\n        rootPaneNode,\n        routerPanesStream,\n        structureContext\n    ]);\n    return data;\n}\n_s2(useResolvedPanes, \"dtzFB72ud4diKIim0mIw0eZPfcI=\", false, function() {\n    return [\n        _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.useStructureTool,\n        useRouterPanesStream\n    ];\n});\nasync function ensureDocumentIdAndType(documentStore, id, type) {\n    if (id && type) return {\n        id,\n        type\n    };\n    if (!id && type) return {\n        id: (0,_sanity_uuid__WEBPACK_IMPORTED_MODULE_34__[\"default\"])(),\n        type\n    };\n    if (id && !type) {\n        const resolvedType = await (0,_barrel_optimize_names_NEVER_ReplaySubject_concat_firstValueFrom_from_isObservable_of_rxjs__WEBPACK_IMPORTED_MODULE_24__.firstValueFrom)(documentStore.resolveTypeForDocument(id));\n        return {\n            id,\n            type: resolvedType\n        };\n    }\n    throw new PaneResolutionError({\n        message: \"Neither document `id` or `type` was provided when trying to resolve intent.\"\n    });\n}\nconst EMPTY_RECORD = {};\nconst IntentResolver = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(_s3(function IntentResolver2() {\n    _s3();\n    const { navigate } = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter)();\n    const maybeIntent = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState)((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((routerState)=>{\n        const intentName = typeof routerState.intent === \"string\" ? routerState.intent : void 0;\n        return intentName ? {\n            intent: intentName,\n            params: (0,sanity__WEBPACK_IMPORTED_MODULE_17__.isRecord)(routerState.params) ? routerState.params : EMPTY_RECORD,\n            payload: routerState.payload\n        } : void 0;\n    }, []));\n    const { rootPaneNode, structureContext } = (0,_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.useStructureTool)();\n    const documentStore = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useDocumentStore)();\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    if (error) throw error;\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (maybeIntent) {\n            const { intent, params, payload } = maybeIntent;\n            let cancelled = false;\n            async function effect() {\n                const { id, type } = await ensureDocumentIdAndType(documentStore, typeof params.id === \"string\" ? params.id : void 0, typeof params.type === \"string\" ? params.type : void 0);\n                if (cancelled) return;\n                const panes = await resolveIntent({\n                    intent,\n                    params: {\n                        ...params,\n                        id,\n                        type\n                    },\n                    payload,\n                    rootPaneNode,\n                    structureContext\n                });\n                if (cancelled) return;\n                navigate({\n                    panes\n                }, {\n                    replace: true\n                });\n            }\n            effect().catch(setError);\n            return ()=>{\n                cancelled = true;\n            };\n        }\n    }, [\n        documentStore,\n        maybeIntent,\n        navigate,\n        rootPaneNode,\n        structureContext\n    ]);\n    return null;\n}, \"fDKS8/kIyvegb7eedQDP20bdh9Y=\", false, function() {\n    return [\n        sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouter,\n        sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState,\n        _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.useStructureTool,\n        sanity__WEBPACK_IMPORTED_MODULE_17__.useDocumentStore\n    ];\n}));\n_c1 = IntentResolver;\nvar __freeze$1 = Object.freeze;\nvar __defProp$1 = Object.defineProperty;\nvar __template$1 = (cooked, raw)=>__freeze$1(__defProp$1(cooked, \"raw\", {\n        value: __freeze$1(raw || cooked.slice())\n    }));\nvar _a$1;\nconst PathSegment = styled_components__WEBPACK_IMPORTED_MODULE_35__[\"default\"].span(_a$1 || (_a$1 = __template$1([\n    \"\\n  &:not(:last-child)::after {\\n    content: ' ➝ ';\\n    opacity: 0.5;\\n  }\\n\"\n])));\n_c2 = PathSegment;\nfunction formatStack(stack) {\n    return stack.replace(/\\(\\.\\.\\.\\)\\./g, \"(...)\\n  .\").replace(/__WEBPACK_IMPORTED_MODULE_\\d+_+/g, \"\").replace(/___default\\./g, \".\").replace(new RegExp(\" \\\\(https?:\\\\/\\\\/\".concat(window.location.host), \"g\"), \" (\");\n}\nfunction StructureError(_ref8) {\n    _s4();\n    let { error } = _ref8;\n    if (!(error instanceof PaneResolutionError)) {\n        throw error;\n    }\n    const { cause } = error;\n    const { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.structureLocaleNamespace);\n    const stack = (cause == null ? void 0 : cause.stack) || error.stack;\n    const showStack = stack && !(cause instanceof _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.SerializeError) && !error.message.includes(\"Module build failed:\");\n    const path = cause instanceof _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.SerializeError ? cause.path : [];\n    const helpId = cause instanceof _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.SerializeError && cause.helpId || error.helpId;\n    const handleReload = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>{\n        window.location.reload();\n    }, []);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Card, {\n        height: \"fill\",\n        overflow: \"auto\",\n        padding: 4,\n        sizing: \"border\",\n        tone: \"critical\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Container, {\n            children: [\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Heading, {\n                    as: \"h2\",\n                    children: t(\"structure-error.header.text\")\n                }),\n                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Card, {\n                    marginTop: 4,\n                    padding: 4,\n                    radius: 2,\n                    overflow: \"auto\",\n                    shadow: 1,\n                    tone: \"inherit\",\n                    children: [\n                        path.length > 0 && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Stack, {\n                            space: 2,\n                            children: [\n                                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Text, {\n                                    size: 1,\n                                    weight: \"medium\",\n                                    children: t(\"structure-error.structure-path.label\")\n                                }),\n                                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Code, {\n                                    children: path.slice(1).map((segment, i)=>// eslint-disable-next-line react/no-array-index-key\n                                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PathSegment, {\n                                            children: segment\n                                        }, \"\".concat(segment, \"-\").concat(i)))\n                                })\n                            ]\n                        }),\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Stack, {\n                            marginTop: 4,\n                            space: 2,\n                            children: [\n                                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Text, {\n                                    size: 1,\n                                    weight: \"medium\",\n                                    children: t(\"structure-error.error.label\")\n                                }),\n                                /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Code, {\n                                    children: showStack ? formatStack(stack) : error.message\n                                })\n                            ]\n                        }),\n                        helpId && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Box, {\n                            marginTop: 4,\n                            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Text, {\n                                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                                    href: (0,_sanity_generate_help_url__WEBPACK_IMPORTED_MODULE_27__.generateHelpUrl)(helpId),\n                                    rel: \"noopener noreferrer\",\n                                    target: \"_blank\",\n                                    children: t(\"structure-error.docs-link.text\")\n                                })\n                            })\n                        }),\n                        /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Box, {\n                            marginTop: 4,\n                            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_TooltipDelayGroupProvider_MYd0Yb1I_js__WEBPACK_IMPORTED_MODULE_37__.Button, {\n                                text: t(\"structure-error.reload-button.text\"),\n                                icon: _sanity_icons__WEBPACK_IMPORTED_MODULE_38__.SyncIcon,\n                                tone: \"primary\",\n                                onClick: handleReload\n                            })\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n}\n_s4(StructureError, \"RM+ej+exC4jwpxxL2XUlWQOf0/s=\", false, function() {\n    return [\n        sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation\n    ];\n});\n_c3 = StructureError;\nfunction UnknownPane(props) {\n    _s5();\n    const { isSelected, pane, paneKey } = props;\n    const type = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.isRecord)(pane) && pane.type || null;\n    const { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.structureLocaleNamespace);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.Pane, {\n        id: paneKey,\n        selected: isSelected,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.PaneHeader, {\n                title: t(\"panes.unknown-pane-type.title\")\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.PaneContent, {\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Box, {\n                    padding: 4,\n                    children: typeof type === \"string\" ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Text, {\n                        as: \"p\",\n                        muted: true,\n                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sanity__WEBPACK_IMPORTED_MODULE_17__.Translate, {\n                            t,\n                            i18nKey: \"panes.unknown-pane-type.unknown-type.text\",\n                            values: {\n                                type\n                            }\n                        })\n                    }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Text, {\n                        as: \"p\",\n                        muted: true,\n                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sanity__WEBPACK_IMPORTED_MODULE_17__.Translate, {\n                            t,\n                            i18nKey: \"panes.unknown-pane-type.missing-type.text\"\n                        })\n                    })\n                })\n            })\n        ]\n    });\n}\n_s5(UnknownPane, \"vu2xTFBfHkv41zWfADiErp1aWcA=\", false, function() {\n    return [\n        sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation\n    ];\n});\n_c4 = UnknownPane;\nconst paneMap = {\n    component: /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>__webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_sanity_lib__chunks_index-qO0SW7D8_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./index-qO0SW7D8.js */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks/index-qO0SW7D8.js\"))),\n    document: /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>__webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_sanity_lib__chunks_pane-zkH8ol1W_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./pane-zkH8ol1W.js */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks/pane-zkH8ol1W.js\"))),\n    documentList: /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>__webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_sanity_lib__chunks_pane-Z1d7aPhA_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./pane-Z1d7aPhA.js */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks/pane-Z1d7aPhA.js\"))),\n    list: /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.lazy)(()=>__webpack_require__.e(/*! import() */ \"_app-pages-browser_node_modules_sanity_lib__chunks_index-eU-tJGyL_js\").then(__webpack_require__.bind(__webpack_require__, /*! ./index-eU-tJGyL.js */ \"(app-pages-browser)/./node_modules/sanity/lib/_chunks/index-eU-tJGyL.js\")))\n};\nconst StructureToolPane = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(function StructureToolPane2(props) {\n    const { active, childItemId, groupIndex, index, itemId, pane, paneKey, params, payload, path, selected, siblingIndex } = props;\n    const PaneComponent = paneMap[pane.type] || UnknownPane;\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PaneRouterProvider, {\n        flatIndex: index,\n        index: groupIndex,\n        params,\n        payload,\n        siblingIndex,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Suspense, {\n            fallback: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.LoadingPane, {\n                paneKey,\n                path,\n                selected\n            }),\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PaneComponent, {\n                childItemId: childItemId || \"\",\n                index,\n                itemId,\n                isActive: active,\n                isSelected: selected,\n                paneKey,\n                pane\n            })\n        })\n    });\n}, (_ref9, _ref10)=>{\n    let { params: prevParams = {}, payload: prevPayload = null, ...prev } = _ref9;\n    let { params: nextParams = {}, payload: nextPayload = null, ...next } = _ref10;\n    if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default()(prevParams, nextParams)) return false;\n    if (!lodash_isEqual_js__WEBPACK_IMPORTED_MODULE_3___default()(prevPayload, nextPayload)) return false;\n    const keys = /* @__PURE__ */ new Set([\n        ...Object.keys(prev),\n        ...Object.keys(next)\n    ]);\n    for (const key of keys){\n        if (prev[key] !== next[key]) return false;\n    }\n    return true;\n});\n_c5 = StructureToolPane;\nfunction NoDocumentTypesScreen() {\n    _s6();\n    const { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.structureLocaleNamespace);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Card, {\n        height: \"fill\",\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Flex, {\n            align: \"center\",\n            height: \"fill\",\n            justify: \"center\",\n            padding: 4,\n            sizing: \"border\",\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Container, {\n                width: 0,\n                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Card, {\n                    padding: 4,\n                    radius: 2,\n                    shadow: 1,\n                    tone: \"caution\",\n                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Flex, {\n                        children: [\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Box, {\n                                children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Text, {\n                                    size: 1,\n                                    children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_icons__WEBPACK_IMPORTED_MODULE_38__.WarningOutlineIcon, {})\n                                })\n                            }),\n                            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Stack, {\n                                flex: 1,\n                                marginLeft: 3,\n                                space: 3,\n                                children: [\n                                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Text, {\n                                        as: \"h1\",\n                                        size: 1,\n                                        weight: \"medium\",\n                                        children: t(\"no-document-types-screen.title\")\n                                    }),\n                                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Text, {\n                                        as: \"p\",\n                                        muted: true,\n                                        size: 1,\n                                        children: t(\"no-document-types-screen.subtitle\")\n                                    }),\n                                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.Text, {\n                                        as: \"p\",\n                                        muted: true,\n                                        size: 1,\n                                        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"a\", {\n                                            href: \"https://www.sanity.io/docs/create-a-schema-and-configure-sanity-studio\",\n                                            target: \"_blank\",\n                                            rel: \"noreferrer\",\n                                            children: t(\"no-document-types-screen.link-text\")\n                                        })\n                                    })\n                                ]\n                            })\n                        ]\n                    })\n                })\n            })\n        })\n    });\n}\n_s6(NoDocumentTypesScreen, \"vu2xTFBfHkv41zWfADiErp1aWcA=\", false, function() {\n    return [\n        sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation\n    ];\n});\n_c6 = NoDocumentTypesScreen;\nconst DocumentTitle = (props)=>{\n    _s7();\n    const { documentId, documentType } = props;\n    const editState = (0,sanity__WEBPACK_IMPORTED_MODULE_39__.useEditState)(documentId, documentType);\n    const schema = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useSchema)();\n    const { t } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.structureLocaleNamespace);\n    const isNewDocument = !(editState == null ? void 0 : editState.published) && !(editState == null ? void 0 : editState.draft);\n    const documentValue = (editState == null ? void 0 : editState.draft) || (editState == null ? void 0 : editState.published);\n    const schemaType = schema.get(documentType);\n    const { value, isLoading: previewValueIsLoading } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useDocumentPreview)({\n        enabled: true,\n        schemaType,\n        value: documentValue\n    });\n    const documentTitle = isNewDocument ? t(\"browser-document-title.new-document\", {\n        schemaType: (schemaType == null ? void 0 : schemaType.title) || (schemaType == null ? void 0 : schemaType.name)\n    }) : (value == null ? void 0 : value.title) || t(\"browser-document-title.untitled-document\");\n    const settled = editState.ready && !previewValueIsLoading;\n    const newTitle = useConstructDocumentTitle(documentTitle);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!settled) return;\n        document.title = newTitle;\n    }, [\n        documentTitle,\n        settled,\n        newTitle\n    ]);\n    return null;\n};\n_s7(DocumentTitle, \"FoFW30CJH8JdxHiYtzZxIYXfXoY=\", false, function() {\n    return [\n        sanity__WEBPACK_IMPORTED_MODULE_39__.useEditState,\n        sanity__WEBPACK_IMPORTED_MODULE_17__.useSchema,\n        sanity__WEBPACK_IMPORTED_MODULE_17__.useTranslation,\n        useConstructDocumentTitle\n    ];\n});\n_c7 = DocumentTitle;\nconst PassthroughTitle = (props)=>{\n    _s8();\n    const { title } = props;\n    const newTitle = useConstructDocumentTitle(title);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        document.title = newTitle;\n    }, [\n        newTitle,\n        title\n    ]);\n    return null;\n};\n_s8(PassthroughTitle, \"DIe8fA9TkCvDZAnMFPO7i9I98eA=\", false, function() {\n    return [\n        useConstructDocumentTitle\n    ];\n});\n_c8 = PassthroughTitle;\nconst StructureTitle = (props)=>{\n    const { resolvedPanes } = props;\n    if (!(resolvedPanes == null ? void 0 : resolvedPanes.length)) return null;\n    const lastPane = resolvedPanes[resolvedPanes.length - 1];\n    if (isLoadingPane(lastPane)) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, {});\n    }\n    if (isDocumentPane(lastPane)) {\n        if (lastPane == null ? void 0 : lastPane.title) {\n            return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, {\n                title: lastPane.title\n            });\n        }\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(DocumentTitle, {\n            documentId: lastPane.options.id,\n            documentType: lastPane.options.type\n        });\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(PassthroughTitle, {\n        title: lastPane == null ? void 0 : lastPane.title\n    });\n};\n_c9 = StructureTitle;\nfunction useConstructDocumentTitle(activeTitle) {\n    _s9();\n    const structureToolBaseTitle = (0,_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.useStructureTool)().structureContext.title;\n    return [\n        activeTitle,\n        structureToolBaseTitle\n    ].filter((title)=>title).join(\" | \");\n}\n_s9(useConstructDocumentTitle, \"5hVrLjJPbMpaXeg0UzPJ7vajZKI=\", false, function() {\n    return [\n        _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.useStructureTool\n    ];\n});\nfunction isDocumentPane(pane) {\n    return pane !== _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE && pane.type === \"document\";\n}\nfunction isLoadingPane(pane) {\n    return pane === _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE;\n}\nvar __freeze = Object.freeze;\nvar __defProp = Object.defineProperty;\nvar __template = (cooked, raw)=>__freeze(__defProp(cooked, \"raw\", {\n        value: __freeze(raw || cooked.slice())\n    }));\nvar _a;\nconst StyledPaneLayout = (0,styled_components__WEBPACK_IMPORTED_MODULE_35__[\"default\"])(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.PaneLayout)(_a || (_a = __template([\n    \"\\n  min-height: 100%;\\n  min-width: 320px;\\n\"\n])));\n_c10 = StyledPaneLayout;\nconst isSaveHotkey = (0,is_hotkey__WEBPACK_IMPORTED_MODULE_12__[\"default\"])(\"mod+s\");\nconst StructureTool = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.memo)(_s10(function StructureTool2(_ref11) {\n    _s10();\n    let { onPaneChange } = _ref11;\n    var _a2;\n    const { push: pushToast } = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.useToast)();\n    const schema = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useSchema)();\n    const { layoutCollapsed, setLayoutCollapsed } = (0,_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.useStructureTool)();\n    const { paneDataItems, resolvedPanes } = useResolvedPanes();\n    const isResolvingIntent = (0,sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState)((0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)((routerState)=>typeof routerState.intent === \"string\", []));\n    const { sanity: { media } } = (0,_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.useTheme)();\n    const [portalElement, setPortalElement] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const handleRootCollapse = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>setLayoutCollapsed(true), [\n        setLayoutCollapsed\n    ]);\n    const handleRootExpand = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(()=>setLayoutCollapsed(false), [\n        setLayoutCollapsed\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (resolvedPanes.length) {\n            onPaneChange(resolvedPanes);\n        }\n    }, [\n        onPaneChange,\n        resolvedPanes\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const handleGlobalKeyDown = (event)=>{\n            if (isSaveHotkey(event)) {\n                event.preventDefault();\n                pushToast({\n                    closable: true,\n                    id: \"auto-save-message\",\n                    status: \"info\",\n                    title: \"Your work is automatically saved!\",\n                    duration: 4e3\n                });\n            }\n        };\n        window.addEventListener(\"keydown\", handleGlobalKeyDown);\n        return ()=>window.removeEventListener(\"keydown\", handleGlobalKeyDown);\n    }, [\n        pushToast\n    ]);\n    const hasDefinedDocumentTypes = (_a2 = schema._original) == null ? void 0 : _a2.types.some(sanity__WEBPACK_IMPORTED_MODULE_39__._isCustomDocumentTypeDefinition);\n    if (!hasDefinedDocumentTypes) {\n        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NoDocumentTypesScreen, {});\n    }\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.PortalProvider, {\n        element: portalElement || null,\n        children: [\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(StyledPaneLayout, {\n                flex: 1,\n                height: layoutCollapsed ? void 0 : \"fill\",\n                minWidth: media[1],\n                onCollapse: handleRootCollapse,\n                onExpand: handleRootExpand,\n                children: [\n                    paneDataItems.map((_ref12)=>{\n                        let { active, childItemId, groupIndex, itemId, key: paneKey, pane, index: paneIndex, params: paneParams, path, payload, siblingIndex, selected } = _ref12;\n                        return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react__WEBPACK_IMPORTED_MODULE_1__.Fragment, {\n                            children: pane === _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE ? /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.LoadingPane, {\n                                paneKey,\n                                path,\n                                selected\n                            }) : /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StructureToolPane, {\n                                active,\n                                groupIndex,\n                                index: paneIndex,\n                                pane,\n                                childItemId,\n                                itemId,\n                                paneKey,\n                                params: paneParams,\n                                payload,\n                                path,\n                                selected,\n                                siblingIndex\n                            })\n                        }, \"\".concat(pane === _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.LOADING_PANE ? \"loading\" : pane.type, \"-\").concat(paneIndex));\n                    }),\n                    paneDataItems.length <= 1 && isResolvingIntent && /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.LoadingPane, {\n                        paneKey: \"intent-resolver\"\n                    })\n                ]\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StructureTitle, {\n                resolvedPanes\n            }),\n            /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(\"div\", {\n                \"data-portal\": \"\",\n                ref: setPortalElement\n            })\n        ]\n    });\n}, \"mYPCycEHyPGtgQRwyT0iqS4182w=\", false, function() {\n    return [\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_36__.useToast,\n        sanity__WEBPACK_IMPORTED_MODULE_17__.useSchema,\n        _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.useStructureTool,\n        useResolvedPanes,\n        sanity_router__WEBPACK_IMPORTED_MODULE_14__.useRouterState,\n        _sanity_ui__WEBPACK_IMPORTED_MODULE_36__.useTheme\n    ];\n}));\n_c11 = StructureTool;\nfunction StructureToolBoundary(_ref13) {\n    _s11();\n    let { tool: { options } } = _ref13;\n    const { unstable_sources: sources } = (0,sanity__WEBPACK_IMPORTED_MODULE_17__.useWorkspace)();\n    const [firstSource] = sources;\n    const { source, defaultDocumentNode, structure } = options || {};\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        (0,_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.setActivePanes)([]);\n        return ()=>(0,_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.setActivePanes)([]);\n    }, []);\n    const [{ error }, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        error: null\n    });\n    if (error) return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StructureError, {\n        error\n    });\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_sanity_ui__WEBPACK_IMPORTED_MODULE_36__.ErrorBoundary, {\n        onCatch: setError,\n        children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(sanity__WEBPACK_IMPORTED_MODULE_17__.SourceProvider, {\n            name: source || firstSource.name,\n            children: /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(_StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.StructureToolProvider, {\n                defaultDocumentNode,\n                structure,\n                children: [\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(StructureTool, {\n                        onPaneChange: _StructureToolProvider_bB9pgLAp_js__WEBPACK_IMPORTED_MODULE_15__.setActivePanes\n                    }),\n                    /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(IntentResolver, {})\n                ]\n            })\n        })\n    });\n}\n_s11(StructureToolBoundary, \"7syEpXIiafSJZGp560faXdnsEOA=\", false, function() {\n    return [\n        sanity__WEBPACK_IMPORTED_MODULE_17__.useWorkspace\n    ];\n});\n_c12 = StructureToolBoundary;\n //# sourceMappingURL=index-7N04noJ_.js.map\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"PaneRouterProvider\");\n$RefreshReg$(_c1, \"IntentResolver\");\n$RefreshReg$(_c2, \"PathSegment\");\n$RefreshReg$(_c3, \"StructureError\");\n$RefreshReg$(_c4, \"UnknownPane\");\n$RefreshReg$(_c5, \"StructureToolPane\");\n$RefreshReg$(_c6, \"NoDocumentTypesScreen\");\n$RefreshReg$(_c7, \"DocumentTitle\");\n$RefreshReg$(_c8, \"PassthroughTitle\");\n$RefreshReg$(_c9, \"StructureTitle\");\n$RefreshReg$(_c10, \"StyledPaneLayout\");\n$RefreshReg$(_c11, \"StructureTool\");\n$RefreshReg$(_c12, \"StructureToolBoundary\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/sanity/lib/_chunks/index-7N04noJ_.js\n"));

/***/ })

}]);
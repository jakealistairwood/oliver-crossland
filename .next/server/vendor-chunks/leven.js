"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/leven";
exports.ids = ["vendor-chunks/leven"];
exports.modules = {

/***/ "(ssr)/./node_modules/leven/index.js":
/*!*************************************!*\
  !*** ./node_modules/leven/index.js ***!
  \*************************************/
/***/ ((module) => {

eval("\nconst array = [];\nconst charCodeCache = [];\nconst leven = (left, right)=>{\n    if (left === right) {\n        return 0;\n    }\n    const swap = left;\n    // Swapping the strings if `a` is longer than `b` so we know which one is the\n    // shortest & which one is the longest\n    if (left.length > right.length) {\n        left = right;\n        right = swap;\n    }\n    let leftLength = left.length;\n    let rightLength = right.length;\n    // Performing suffix trimming:\n    // We can linearly drop suffix common to both strings since they\n    // don't increase distance at all\n    // Note: `~-` is the bitwise way to perform a `- 1` operation\n    while(leftLength > 0 && left.charCodeAt(~-leftLength) === right.charCodeAt(~-rightLength)){\n        leftLength--;\n        rightLength--;\n    }\n    // Performing prefix trimming\n    // We can linearly drop prefix common to both strings since they\n    // don't increase distance at all\n    let start = 0;\n    while(start < leftLength && left.charCodeAt(start) === right.charCodeAt(start)){\n        start++;\n    }\n    leftLength -= start;\n    rightLength -= start;\n    if (leftLength === 0) {\n        return rightLength;\n    }\n    let bCharCode;\n    let result;\n    let temp;\n    let temp2;\n    let i = 0;\n    let j = 0;\n    while(i < leftLength){\n        charCodeCache[i] = left.charCodeAt(start + i);\n        array[i] = ++i;\n    }\n    while(j < rightLength){\n        bCharCode = right.charCodeAt(start + j);\n        temp = j++;\n        result = j;\n        for(i = 0; i < leftLength; i++){\n            temp2 = bCharCode === charCodeCache[i] ? temp : temp + 1;\n            temp = array[i];\n            // eslint-disable-next-line no-multi-assign\n            result = array[i] = temp > result ? temp2 > result ? result + 1 : temp2 : temp2 > temp ? temp + 1 : temp2;\n        }\n    }\n    return result;\n};\nmodule.exports = leven;\n// TODO: Remove this for the next major release\nmodule.exports[\"default\"] = leven;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbGV2ZW4vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxNQUFNQSxRQUFRLEVBQUU7QUFDaEIsTUFBTUMsZ0JBQWdCLEVBQUU7QUFFeEIsTUFBTUMsUUFBUSxDQUFDQyxNQUFNQztJQUNwQixJQUFJRCxTQUFTQyxPQUFPO1FBQ25CLE9BQU87SUFDUjtJQUVBLE1BQU1DLE9BQU9GO0lBRWIsNkVBQTZFO0lBQzdFLHNDQUFzQztJQUN0QyxJQUFJQSxLQUFLRyxNQUFNLEdBQUdGLE1BQU1FLE1BQU0sRUFBRTtRQUMvQkgsT0FBT0M7UUFDUEEsUUFBUUM7SUFDVDtJQUVBLElBQUlFLGFBQWFKLEtBQUtHLE1BQU07SUFDNUIsSUFBSUUsY0FBY0osTUFBTUUsTUFBTTtJQUU5Qiw4QkFBOEI7SUFDOUIsZ0VBQWdFO0lBQ2hFLGlDQUFpQztJQUNqQyw2REFBNkQ7SUFDN0QsTUFBT0MsYUFBYSxLQUFNSixLQUFLTSxVQUFVLENBQUMsQ0FBQyxDQUFDRixnQkFBZ0JILE1BQU1LLFVBQVUsQ0FBQyxDQUFDLENBQUNELGFBQWU7UUFDN0ZEO1FBQ0FDO0lBQ0Q7SUFFQSw2QkFBNkI7SUFDN0IsZ0VBQWdFO0lBQ2hFLGlDQUFpQztJQUNqQyxJQUFJRSxRQUFRO0lBRVosTUFBT0EsUUFBUUgsY0FBZUosS0FBS00sVUFBVSxDQUFDQyxXQUFXTixNQUFNSyxVQUFVLENBQUNDLE9BQVM7UUFDbEZBO0lBQ0Q7SUFFQUgsY0FBY0c7SUFDZEYsZUFBZUU7SUFFZixJQUFJSCxlQUFlLEdBQUc7UUFDckIsT0FBT0M7SUFDUjtJQUVBLElBQUlHO0lBQ0osSUFBSUM7SUFDSixJQUFJQztJQUNKLElBQUlDO0lBQ0osSUFBSUMsSUFBSTtJQUNSLElBQUlDLElBQUk7SUFFUixNQUFPRCxJQUFJUixXQUFZO1FBQ3RCTixhQUFhLENBQUNjLEVBQUUsR0FBR1osS0FBS00sVUFBVSxDQUFDQyxRQUFRSztRQUMzQ2YsS0FBSyxDQUFDZSxFQUFFLEdBQUcsRUFBRUE7SUFDZDtJQUVBLE1BQU9DLElBQUlSLFlBQWE7UUFDdkJHLFlBQVlQLE1BQU1LLFVBQVUsQ0FBQ0MsUUFBUU07UUFDckNILE9BQU9HO1FBQ1BKLFNBQVNJO1FBRVQsSUFBS0QsSUFBSSxHQUFHQSxJQUFJUixZQUFZUSxJQUFLO1lBQ2hDRCxRQUFRSCxjQUFjVixhQUFhLENBQUNjLEVBQUUsR0FBR0YsT0FBT0EsT0FBTztZQUN2REEsT0FBT2IsS0FBSyxDQUFDZSxFQUFFO1lBQ2YsMkNBQTJDO1lBQzNDSCxTQUFTWixLQUFLLENBQUNlLEVBQUUsR0FBR0YsT0FBT0QsU0FBU0UsUUFBUUYsU0FBU0EsU0FBUyxJQUFJRSxRQUFRQSxRQUFRRCxPQUFPQSxPQUFPLElBQUlDO1FBQ3JHO0lBQ0Q7SUFFQSxPQUFPRjtBQUNSO0FBRUFLLE9BQU9DLE9BQU8sR0FBR2hCO0FBQ2pCLCtDQUErQztBQUMvQ2UseUJBQXNCLEdBQUdmIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2xpLWNyb3NzbGFuZC12aWRlb2dyYXBoeS8uL25vZGVfbW9kdWxlcy9sZXZlbi9pbmRleC5qcz82Y2VmIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IGFycmF5ID0gW107XG5jb25zdCBjaGFyQ29kZUNhY2hlID0gW107XG5cbmNvbnN0IGxldmVuID0gKGxlZnQsIHJpZ2h0KSA9PiB7XG5cdGlmIChsZWZ0ID09PSByaWdodCkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0Y29uc3Qgc3dhcCA9IGxlZnQ7XG5cblx0Ly8gU3dhcHBpbmcgdGhlIHN0cmluZ3MgaWYgYGFgIGlzIGxvbmdlciB0aGFuIGBiYCBzbyB3ZSBrbm93IHdoaWNoIG9uZSBpcyB0aGVcblx0Ly8gc2hvcnRlc3QgJiB3aGljaCBvbmUgaXMgdGhlIGxvbmdlc3Rcblx0aWYgKGxlZnQubGVuZ3RoID4gcmlnaHQubGVuZ3RoKSB7XG5cdFx0bGVmdCA9IHJpZ2h0O1xuXHRcdHJpZ2h0ID0gc3dhcDtcblx0fVxuXG5cdGxldCBsZWZ0TGVuZ3RoID0gbGVmdC5sZW5ndGg7XG5cdGxldCByaWdodExlbmd0aCA9IHJpZ2h0Lmxlbmd0aDtcblxuXHQvLyBQZXJmb3JtaW5nIHN1ZmZpeCB0cmltbWluZzpcblx0Ly8gV2UgY2FuIGxpbmVhcmx5IGRyb3Agc3VmZml4IGNvbW1vbiB0byBib3RoIHN0cmluZ3Mgc2luY2UgdGhleVxuXHQvLyBkb24ndCBpbmNyZWFzZSBkaXN0YW5jZSBhdCBhbGxcblx0Ly8gTm90ZTogYH4tYCBpcyB0aGUgYml0d2lzZSB3YXkgdG8gcGVyZm9ybSBhIGAtIDFgIG9wZXJhdGlvblxuXHR3aGlsZSAobGVmdExlbmd0aCA+IDAgJiYgKGxlZnQuY2hhckNvZGVBdCh+LWxlZnRMZW5ndGgpID09PSByaWdodC5jaGFyQ29kZUF0KH4tcmlnaHRMZW5ndGgpKSkge1xuXHRcdGxlZnRMZW5ndGgtLTtcblx0XHRyaWdodExlbmd0aC0tO1xuXHR9XG5cblx0Ly8gUGVyZm9ybWluZyBwcmVmaXggdHJpbW1pbmdcblx0Ly8gV2UgY2FuIGxpbmVhcmx5IGRyb3AgcHJlZml4IGNvbW1vbiB0byBib3RoIHN0cmluZ3Mgc2luY2UgdGhleVxuXHQvLyBkb24ndCBpbmNyZWFzZSBkaXN0YW5jZSBhdCBhbGxcblx0bGV0IHN0YXJ0ID0gMDtcblxuXHR3aGlsZSAoc3RhcnQgPCBsZWZ0TGVuZ3RoICYmIChsZWZ0LmNoYXJDb2RlQXQoc3RhcnQpID09PSByaWdodC5jaGFyQ29kZUF0KHN0YXJ0KSkpIHtcblx0XHRzdGFydCsrO1xuXHR9XG5cblx0bGVmdExlbmd0aCAtPSBzdGFydDtcblx0cmlnaHRMZW5ndGggLT0gc3RhcnQ7XG5cblx0aWYgKGxlZnRMZW5ndGggPT09IDApIHtcblx0XHRyZXR1cm4gcmlnaHRMZW5ndGg7XG5cdH1cblxuXHRsZXQgYkNoYXJDb2RlO1xuXHRsZXQgcmVzdWx0O1xuXHRsZXQgdGVtcDtcblx0bGV0IHRlbXAyO1xuXHRsZXQgaSA9IDA7XG5cdGxldCBqID0gMDtcblxuXHR3aGlsZSAoaSA8IGxlZnRMZW5ndGgpIHtcblx0XHRjaGFyQ29kZUNhY2hlW2ldID0gbGVmdC5jaGFyQ29kZUF0KHN0YXJ0ICsgaSk7XG5cdFx0YXJyYXlbaV0gPSArK2k7XG5cdH1cblxuXHR3aGlsZSAoaiA8IHJpZ2h0TGVuZ3RoKSB7XG5cdFx0YkNoYXJDb2RlID0gcmlnaHQuY2hhckNvZGVBdChzdGFydCArIGopO1xuXHRcdHRlbXAgPSBqKys7XG5cdFx0cmVzdWx0ID0gajtcblxuXHRcdGZvciAoaSA9IDA7IGkgPCBsZWZ0TGVuZ3RoOyBpKyspIHtcblx0XHRcdHRlbXAyID0gYkNoYXJDb2RlID09PSBjaGFyQ29kZUNhY2hlW2ldID8gdGVtcCA6IHRlbXAgKyAxO1xuXHRcdFx0dGVtcCA9IGFycmF5W2ldO1xuXHRcdFx0Ly8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW11bHRpLWFzc2lnblxuXHRcdFx0cmVzdWx0ID0gYXJyYXlbaV0gPSB0ZW1wID4gcmVzdWx0ID8gdGVtcDIgPiByZXN1bHQgPyByZXN1bHQgKyAxIDogdGVtcDIgOiB0ZW1wMiA+IHRlbXAgPyB0ZW1wICsgMSA6IHRlbXAyO1xuXHRcdH1cblx0fVxuXG5cdHJldHVybiByZXN1bHQ7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGxldmVuO1xuLy8gVE9ETzogUmVtb3ZlIHRoaXMgZm9yIHRoZSBuZXh0IG1ham9yIHJlbGVhc2Vcbm1vZHVsZS5leHBvcnRzLmRlZmF1bHQgPSBsZXZlbjtcbiJdLCJuYW1lcyI6WyJhcnJheSIsImNoYXJDb2RlQ2FjaGUiLCJsZXZlbiIsImxlZnQiLCJyaWdodCIsInN3YXAiLCJsZW5ndGgiLCJsZWZ0TGVuZ3RoIiwicmlnaHRMZW5ndGgiLCJjaGFyQ29kZUF0Iiwic3RhcnQiLCJiQ2hhckNvZGUiLCJyZXN1bHQiLCJ0ZW1wIiwidGVtcDIiLCJpIiwiaiIsIm1vZHVsZSIsImV4cG9ydHMiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/leven/index.js\n");

/***/ })

};
;
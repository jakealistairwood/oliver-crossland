"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-refractor";
exports.ids = ["vendor-chunks/react-refractor"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-refractor/lib/Refractor.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-refractor/lib/Refractor.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar PropTypes = __webpack_require__(/*! prop-types */ \"(ssr)/./node_modules/prop-types/index.js\");\nvar fract = __webpack_require__(/*! refractor/core.js */ \"(ssr)/./node_modules/refractor/core.js\");\nvar mapChildren = __webpack_require__(/*! ./mapChildren */ \"(ssr)/./node_modules/react-refractor/lib/mapChildren.js\");\nvar addMarkers = __webpack_require__(/*! ./addMarkers */ \"(ssr)/./node_modules/react-refractor/lib/addMarkers.js\"); // eslint-disable-next-line id-length\nvar h = React.createElement;\nfunction Refractor(props) {\n    if (true) {\n        if (!fract.registered(props.language)) {\n            // eslint-disable-next-line no-console\n            console.warn('No language definitions for \"'.concat(props.language, '\" seems to be registered, did you forget to call `Refractor.registerLanguage()`?'));\n        }\n    }\n    var langClassName = \"language-\".concat(props.language);\n    var codeProps = {\n        className: langClassName\n    };\n    var preProps = {\n        className: [\n            props.className,\n            langClassName\n        ].filter(Boolean).join(\" \")\n    };\n    if (props.inline) {\n        codeProps.style = {\n            display: \"inline\"\n        };\n        codeProps.className = props.className;\n    }\n    var ast = fract.highlight(props.value, props.language);\n    if (props.markers && props.markers.length > 0) {\n        ast = addMarkers(ast, {\n            markers: props.markers\n        });\n    }\n    var value = ast.length === 0 ? props.value : ast.map(mapChildren.depth(0));\n    var code = h(\"code\", codeProps, value);\n    return props.inline ? code : h(\"pre\", preProps, code);\n}\nRefractor.propTypes = {\n    className: PropTypes.string,\n    inline: PropTypes.bool,\n    language: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    markers: PropTypes.arrayOf(PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.shape({\n            line: PropTypes.number.isRequired,\n            className: PropTypes.string,\n            component: PropTypes.oneOfType([\n                PropTypes.node,\n                PropTypes.func\n            ])\n        })\n    ]))\n};\nRefractor.defaultProps = {\n    className: \"refractor\",\n    inline: false\n};\nRefractor.registerLanguage = function(lang) {\n    return fract.register(lang);\n};\nRefractor.hasLanguage = function(lang) {\n    return fract.registered(lang);\n};\nmodule.exports = Refractor; //# sourceMappingURL=Refractor.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVmcmFjdG9yL2xpYi9SZWZyYWN0b3IuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYixJQUFJQSxRQUFRQyxtQkFBT0EsQ0FBQztBQUVwQixJQUFJQyxZQUFZRCxtQkFBT0EsQ0FBQztBQUV4QixJQUFJRSxRQUFRRixtQkFBT0EsQ0FBQztBQUVwQixJQUFJRyxjQUFjSCxtQkFBT0EsQ0FBQztBQUUxQixJQUFJSSxhQUFhSixtQkFBT0EsQ0FBQywrRUFBaUIscUNBQXFDO0FBRy9FLElBQUlLLElBQUlOLE1BQU1PLGFBQWE7QUFFM0IsU0FBU0MsVUFBVUMsS0FBSztJQUN0QixJQUFJQyxJQUF5QixFQUFjO1FBQ3pDLElBQUksQ0FBQ1AsTUFBTVEsVUFBVSxDQUFDRixNQUFNRyxRQUFRLEdBQUc7WUFDckMsc0NBQXNDO1lBQ3RDQyxRQUFRQyxJQUFJLENBQUMsZ0NBQWlDQyxNQUFNLENBQUNOLE1BQU1HLFFBQVEsRUFBRTtRQUN2RTtJQUNGO0lBRUEsSUFBSUksZ0JBQWdCLFlBQVlELE1BQU0sQ0FBQ04sTUFBTUcsUUFBUTtJQUNyRCxJQUFJSyxZQUFZO1FBQ2RDLFdBQVdGO0lBQ2I7SUFDQSxJQUFJRyxXQUFXO1FBQ2JELFdBQVc7WUFBQ1QsTUFBTVMsU0FBUztZQUFFRjtTQUFjLENBQUNJLE1BQU0sQ0FBQ0MsU0FBU0MsSUFBSSxDQUFDO0lBQ25FO0lBRUEsSUFBSWIsTUFBTWMsTUFBTSxFQUFFO1FBQ2hCTixVQUFVTyxLQUFLLEdBQUc7WUFDaEJDLFNBQVM7UUFDWDtRQUNBUixVQUFVQyxTQUFTLEdBQUdULE1BQU1TLFNBQVM7SUFDdkM7SUFFQSxJQUFJUSxNQUFNdkIsTUFBTXdCLFNBQVMsQ0FBQ2xCLE1BQU1tQixLQUFLLEVBQUVuQixNQUFNRyxRQUFRO0lBRXJELElBQUlILE1BQU1vQixPQUFPLElBQUlwQixNQUFNb0IsT0FBTyxDQUFDQyxNQUFNLEdBQUcsR0FBRztRQUM3Q0osTUFBTXJCLFdBQVdxQixLQUFLO1lBQ3BCRyxTQUFTcEIsTUFBTW9CLE9BQU87UUFDeEI7SUFDRjtJQUVBLElBQUlELFFBQVFGLElBQUlJLE1BQU0sS0FBSyxJQUFJckIsTUFBTW1CLEtBQUssR0FBR0YsSUFBSUssR0FBRyxDQUFDM0IsWUFBWTRCLEtBQUssQ0FBQztJQUN2RSxJQUFJQyxPQUFPM0IsRUFBRSxRQUFRVyxXQUFXVztJQUNoQyxPQUFPbkIsTUFBTWMsTUFBTSxHQUFHVSxPQUFPM0IsRUFBRSxPQUFPYSxVQUFVYztBQUNsRDtBQUVBekIsVUFBVTBCLFNBQVMsR0FBRztJQUNwQmhCLFdBQVdoQixVQUFVaUMsTUFBTTtJQUMzQlosUUFBUXJCLFVBQVVrQyxJQUFJO0lBQ3RCeEIsVUFBVVYsVUFBVWlDLE1BQU0sQ0FBQ0UsVUFBVTtJQUNyQ1QsT0FBTzFCLFVBQVVpQyxNQUFNLENBQUNFLFVBQVU7SUFDbENSLFNBQVMzQixVQUFVb0MsT0FBTyxDQUFDcEMsVUFBVXFDLFNBQVMsQ0FBQztRQUFDckMsVUFBVXNDLE1BQU07UUFBRXRDLFVBQVV1QyxLQUFLLENBQUM7WUFDaEZDLE1BQU14QyxVQUFVc0MsTUFBTSxDQUFDSCxVQUFVO1lBQ2pDbkIsV0FBV2hCLFVBQVVpQyxNQUFNO1lBQzNCUSxXQUFXekMsVUFBVXFDLFNBQVMsQ0FBQztnQkFBQ3JDLFVBQVUwQyxJQUFJO2dCQUFFMUMsVUFBVTJDLElBQUk7YUFBQztRQUNqRTtLQUFHO0FBQ0w7QUFDQXJDLFVBQVVzQyxZQUFZLEdBQUc7SUFDdkI1QixXQUFXO0lBQ1hLLFFBQVE7QUFDVjtBQUVBZixVQUFVdUMsZ0JBQWdCLEdBQUcsU0FBVUMsSUFBSTtJQUN6QyxPQUFPN0MsTUFBTThDLFFBQVEsQ0FBQ0Q7QUFDeEI7QUFFQXhDLFVBQVUwQyxXQUFXLEdBQUcsU0FBVUYsSUFBSTtJQUNwQyxPQUFPN0MsTUFBTVEsVUFBVSxDQUFDcUM7QUFDMUI7QUFFQUcsT0FBT0MsT0FBTyxHQUFHNUMsV0FDakIscUNBQXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2xpLWNyb3NzbGFuZC12aWRlb2dyYXBoeS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWZyYWN0b3IvbGliL1JlZnJhY3Rvci5qcz9kOGNhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuXG52YXIgUHJvcFR5cGVzID0gcmVxdWlyZSgncHJvcC10eXBlcycpO1xuXG52YXIgZnJhY3QgPSByZXF1aXJlKCdyZWZyYWN0b3IvY29yZS5qcycpO1xuXG52YXIgbWFwQ2hpbGRyZW4gPSByZXF1aXJlKCcuL21hcENoaWxkcmVuJyk7XG5cbnZhciBhZGRNYXJrZXJzID0gcmVxdWlyZSgnLi9hZGRNYXJrZXJzJyk7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBpZC1sZW5ndGhcblxuXG52YXIgaCA9IFJlYWN0LmNyZWF0ZUVsZW1lbnQ7XG5cbmZ1bmN0aW9uIFJlZnJhY3Rvcihwcm9wcykge1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIGlmICghZnJhY3QucmVnaXN0ZXJlZChwcm9wcy5sYW5ndWFnZSkpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLndhcm4oXCJObyBsYW5ndWFnZSBkZWZpbml0aW9ucyBmb3IgXFxcIlwiLmNvbmNhdChwcm9wcy5sYW5ndWFnZSwgXCJcXFwiIHNlZW1zIHRvIGJlIHJlZ2lzdGVyZWQsIGRpZCB5b3UgZm9yZ2V0IHRvIGNhbGwgYFJlZnJhY3Rvci5yZWdpc3Rlckxhbmd1YWdlKClgP1wiKSk7XG4gICAgfVxuICB9XG5cbiAgdmFyIGxhbmdDbGFzc05hbWUgPSBcImxhbmd1YWdlLVwiLmNvbmNhdChwcm9wcy5sYW5ndWFnZSk7XG4gIHZhciBjb2RlUHJvcHMgPSB7XG4gICAgY2xhc3NOYW1lOiBsYW5nQ2xhc3NOYW1lXG4gIH07XG4gIHZhciBwcmVQcm9wcyA9IHtcbiAgICBjbGFzc05hbWU6IFtwcm9wcy5jbGFzc05hbWUsIGxhbmdDbGFzc05hbWVdLmZpbHRlcihCb29sZWFuKS5qb2luKCcgJylcbiAgfTtcblxuICBpZiAocHJvcHMuaW5saW5lKSB7XG4gICAgY29kZVByb3BzLnN0eWxlID0ge1xuICAgICAgZGlzcGxheTogJ2lubGluZSdcbiAgICB9O1xuICAgIGNvZGVQcm9wcy5jbGFzc05hbWUgPSBwcm9wcy5jbGFzc05hbWU7XG4gIH1cblxuICB2YXIgYXN0ID0gZnJhY3QuaGlnaGxpZ2h0KHByb3BzLnZhbHVlLCBwcm9wcy5sYW5ndWFnZSk7XG5cbiAgaWYgKHByb3BzLm1hcmtlcnMgJiYgcHJvcHMubWFya2Vycy5sZW5ndGggPiAwKSB7XG4gICAgYXN0ID0gYWRkTWFya2Vycyhhc3QsIHtcbiAgICAgIG1hcmtlcnM6IHByb3BzLm1hcmtlcnNcbiAgICB9KTtcbiAgfVxuXG4gIHZhciB2YWx1ZSA9IGFzdC5sZW5ndGggPT09IDAgPyBwcm9wcy52YWx1ZSA6IGFzdC5tYXAobWFwQ2hpbGRyZW4uZGVwdGgoMCkpO1xuICB2YXIgY29kZSA9IGgoJ2NvZGUnLCBjb2RlUHJvcHMsIHZhbHVlKTtcbiAgcmV0dXJuIHByb3BzLmlubGluZSA/IGNvZGUgOiBoKCdwcmUnLCBwcmVQcm9wcywgY29kZSk7XG59XG5cblJlZnJhY3Rvci5wcm9wVHlwZXMgPSB7XG4gIGNsYXNzTmFtZTogUHJvcFR5cGVzLnN0cmluZyxcbiAgaW5saW5lOiBQcm9wVHlwZXMuYm9vbCxcbiAgbGFuZ3VhZ2U6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgdmFsdWU6IFByb3BUeXBlcy5zdHJpbmcuaXNSZXF1aXJlZCxcbiAgbWFya2VyczogUHJvcFR5cGVzLmFycmF5T2YoUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm51bWJlciwgUHJvcFR5cGVzLnNoYXBlKHtcbiAgICBsaW5lOiBQcm9wVHlwZXMubnVtYmVyLmlzUmVxdWlyZWQsXG4gICAgY2xhc3NOYW1lOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGNvbXBvbmVudDogUHJvcFR5cGVzLm9uZU9mVHlwZShbUHJvcFR5cGVzLm5vZGUsIFByb3BUeXBlcy5mdW5jXSlcbiAgfSldKSlcbn07XG5SZWZyYWN0b3IuZGVmYXVsdFByb3BzID0ge1xuICBjbGFzc05hbWU6ICdyZWZyYWN0b3InLFxuICBpbmxpbmU6IGZhbHNlXG59O1xuXG5SZWZyYWN0b3IucmVnaXN0ZXJMYW5ndWFnZSA9IGZ1bmN0aW9uIChsYW5nKSB7XG4gIHJldHVybiBmcmFjdC5yZWdpc3RlcihsYW5nKTtcbn07XG5cblJlZnJhY3Rvci5oYXNMYW5ndWFnZSA9IGZ1bmN0aW9uIChsYW5nKSB7XG4gIHJldHVybiBmcmFjdC5yZWdpc3RlcmVkKGxhbmcpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBSZWZyYWN0b3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1SZWZyYWN0b3IuanMubWFwIl0sIm5hbWVzIjpbIlJlYWN0IiwicmVxdWlyZSIsIlByb3BUeXBlcyIsImZyYWN0IiwibWFwQ2hpbGRyZW4iLCJhZGRNYXJrZXJzIiwiaCIsImNyZWF0ZUVsZW1lbnQiLCJSZWZyYWN0b3IiLCJwcm9wcyIsInByb2Nlc3MiLCJyZWdpc3RlcmVkIiwibGFuZ3VhZ2UiLCJjb25zb2xlIiwid2FybiIsImNvbmNhdCIsImxhbmdDbGFzc05hbWUiLCJjb2RlUHJvcHMiLCJjbGFzc05hbWUiLCJwcmVQcm9wcyIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwiaW5saW5lIiwic3R5bGUiLCJkaXNwbGF5IiwiYXN0IiwiaGlnaGxpZ2h0IiwidmFsdWUiLCJtYXJrZXJzIiwibGVuZ3RoIiwibWFwIiwiZGVwdGgiLCJjb2RlIiwicHJvcFR5cGVzIiwic3RyaW5nIiwiYm9vbCIsImlzUmVxdWlyZWQiLCJhcnJheU9mIiwib25lT2ZUeXBlIiwibnVtYmVyIiwic2hhcGUiLCJsaW5lIiwiY29tcG9uZW50Iiwibm9kZSIsImZ1bmMiLCJkZWZhdWx0UHJvcHMiLCJyZWdpc3Rlckxhbmd1YWdlIiwibGFuZyIsInJlZ2lzdGVyIiwiaGFzTGFuZ3VhZ2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-refractor/lib/Refractor.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-refractor/lib/addMarkers.js":
/*!********************************************************!*\
  !*** ./node_modules/react-refractor/lib/addMarkers.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar filter = __webpack_require__(/*! unist-util-filter */ \"(ssr)/./node_modules/unist-util-filter/index.js\");\nvar visit = __webpack_require__(/*! unist-util-visit-parents */ \"(ssr)/./node_modules/unist-util-visit-parents/index.js\");\nvar NodeMap = __webpack_require__(/*! ./map */ \"(ssr)/./node_modules/react-refractor/lib/map.js\");\nfunction lineNumberify(ast) {\n    var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        lineNumber: 1\n    };\n    return ast.reduce(function(result, node) {\n        var lineStart = context.lineNumber;\n        if (node.type === \"text\") {\n            if (node.value.indexOf(\"\\n\") === -1) {\n                node.lineStart = lineStart;\n                node.lineEnd = lineStart;\n                result.nodes.push(node);\n                return result;\n            }\n            var lines = node.value.split(\"\\n\");\n            for(var i = 0; i < lines.length; i++){\n                var lineNum = i === 0 ? context.lineNumber : ++context.lineNumber;\n                result.nodes.push({\n                    type: \"text\",\n                    value: i === lines.length - 1 ? lines[i] : \"\".concat(lines[i], \"\\n\"),\n                    lineStart: lineNum,\n                    lineEnd: lineNum\n                });\n            }\n            result.lineNumber = context.lineNumber;\n            return result;\n        }\n        if (node.children) {\n            var processed = lineNumberify(node.children, context);\n            var firstChild = processed.nodes[0];\n            var lastChild = processed.nodes[processed.nodes.length - 1];\n            node.lineStart = firstChild ? firstChild.lineStart : lineStart;\n            node.lineEnd = lastChild ? lastChild.lineEnd : lineStart;\n            node.children = processed.nodes;\n            result.lineNumber = processed.lineNumber;\n            result.nodes.push(node);\n            return result;\n        }\n        result.nodes.push(node);\n        return result;\n    }, {\n        nodes: [],\n        lineNumber: context.lineNumber\n    });\n}\nfunction unwrapLine(markerLine, nodes) {\n    var tree = {\n        type: \"root\",\n        children: nodes\n    };\n    var headMap = new NodeMap();\n    var lineMap = new NodeMap();\n    var tailMap = new NodeMap();\n    var cloned = [];\n    function addCopy(map, node, ancestors) {\n        cloned.push(node);\n        ancestors.forEach(function(ancestor) {\n            if (!map.has(ancestor)) {\n                map.set(ancestor, Object.assign({}, ancestor, {\n                    children: []\n                }));\n                if (ancestor !== tree) {\n                    cloned.push(ancestor);\n                }\n            }\n        });\n        var i = ancestors.length;\n        while(i--){\n            var ancestor = map.get(ancestors[i]);\n            var child = ancestors[i + 1];\n            var leaf = map.get(child) || node;\n            if (ancestor.children.indexOf(leaf) === -1) {\n                ancestor.children.push(leaf);\n            }\n        }\n    }\n    visit(tree, function(node, ancestors) {\n        if (node.children) {\n            return;\n        } // These nodes are on previous lines, but nested within the same structure\n        if (node.lineStart < markerLine) {\n            addCopy(headMap, node, ancestors);\n            return;\n        } // These nodes are on the target line\n        if (node.lineStart === markerLine) {\n            addCopy(lineMap, node, ancestors);\n            return;\n        } // If we have shared ancestors with some of the cloned elements,\n        // create another tree of the remaining nodes\n        if (node.lineEnd > markerLine && cloned.some(function(clone) {\n            return ancestors.indexOf(clone) !== -1;\n        })) {\n            addCopy(tailMap, node, ancestors);\n        }\n    }); // Get the remaining nodes - the ones who were not part of the same tree\n    var filtered = filter(tree, function(node) {\n        return cloned.indexOf(node) === -1;\n    });\n    var getChildren = function getChildren(map) {\n        var rootNode = map.get(tree);\n        if (!rootNode) {\n            return [];\n        }\n        visit(rootNode, function(leaf, ancestors) {\n            if (leaf.children) {\n                leaf.lineStart = 0;\n                leaf.lineEnd = 0;\n                return;\n            }\n            ancestors.forEach(function(ancestor) {\n                ancestor.lineStart = Math.max(ancestor.lineStart, leaf.lineStart);\n                ancestor.lineEnd = Math.max(ancestor.lineEnd, leaf.lineEnd);\n            });\n        });\n        return rootNode.children;\n    };\n    var merged = [].concat(getChildren(headMap), getChildren(lineMap), getChildren(tailMap), filtered ? filtered.children : []);\n    headMap.clear();\n    lineMap.clear();\n    tailMap.clear();\n    return merged;\n}\nfunction wrapBatch(children, marker, options) {\n    var className = marker.className || \"refractor-marker\";\n    return {\n        type: \"element\",\n        tagName: marker.component || \"div\",\n        properties: marker.component ? Object.assign({}, options, {\n            className: className\n        }) : {\n            className: className\n        },\n        children: children,\n        lineStart: marker.line,\n        lineEnd: children[children.length - 1].lineEnd,\n        isMarker: true\n    };\n}\nfunction wrapLines(treeNodes, markers, options) {\n    if (markers.length === 0 || treeNodes.length === 0) {\n        return treeNodes;\n    }\n    var ast = markers.reduce(function(acc, marker) {\n        return unwrapLine(marker.line, acc);\n    }, treeNodes); // Container for the new AST\n    var wrapped = []; // Note: Markers are already sorted by line number (ascending)\n    var astIndex = 0;\n    for(var m = 0; m < markers.length; m++){\n        var marker = markers[m]; // Start by eating all AST nodes with line numbers up to the given marker\n        for(var node = ast[astIndex]; node && node.lineEnd < marker.line; node = ast[++astIndex]){\n            wrapped.push(node);\n        } // Now proceed to find all _contiguous_ nodes on the same line\n        var batch = [];\n        for(var _node = ast[astIndex]; _node && _node.lineEnd === marker.line; _node = ast[++astIndex]){\n            batch.push(_node);\n        } // Now add that batch, if we have anything\n        if (batch.length > 0) {\n            wrapped.push(wrapBatch(batch, marker, options));\n        }\n    } // Now add the remaining AST nodes\n    while(astIndex < ast.length){\n        wrapped.push(ast[astIndex++]);\n    }\n    return wrapped;\n}\nfunction addMarkers(ast, options) {\n    var markers = options.markers.map(function(marker) {\n        return marker.line ? marker : {\n            line: marker\n        };\n    }).sort(function(nodeA, nodeB) {\n        return nodeA.line - nodeB.line;\n    });\n    var numbered = lineNumberify(ast).nodes;\n    return wrapLines(numbered, markers, options);\n}\nmodule.exports = addMarkers; //# sourceMappingURL=addMarkers.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-refractor/lib/addMarkers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-refractor/lib/map.js":
/*!*************************************************!*\
  !*** ./node_modules/react-refractor/lib/map.js ***!
  \*************************************************/
/***/ ((module) => {

eval("\n/**\n * Weird \"map\" polyfill, that's weak if possible\n */ module.exports = typeof WeakMap === \"function\" ? HappyMap : SadMap; // Happy path! Fakes a `clear()` if possible (noop)\nfunction HappyMap() {\n    this.map = new WeakMap();\n}\nHappyMap.prototype.has = function(key) {\n    return this.map.has(key);\n};\nHappyMap.prototype.set = function(key, value) {\n    this.map.set(key, value);\n    return this;\n};\nHappyMap.prototype.get = function(key) {\n    return this.map.get(key);\n};\nHappyMap.prototype.clear = function() {}; // Sad path! Use less stylish approach\nfunction SadMap() {\n    this.keys = [];\n    this.values = [];\n}\nSadMap.prototype.has = function(key) {\n    return this.keys.indexOf(key) !== -1;\n};\nSadMap.prototype.set = function(key, value) {\n    var index = this.keys.indexOf(key);\n    if (index === -1) {\n        this.keys.push(key);\n        this.values.push(value);\n    } else {\n        this.values[index] = value;\n    }\n    return this;\n};\nSadMap.prototype.get = function(key) {\n    var index = this.keys.indexOf(key);\n    return index === -1 ? undefined : this.values[index];\n};\nSadMap.prototype.clear = function() {\n    this.keys = [];\n    this.values = [];\n}; //# sourceMappingURL=map.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVmcmFjdG9yL2xpYi9tYXAuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFFYjs7Q0FFQyxHQUNEQSxPQUFPQyxPQUFPLEdBQUcsT0FBT0MsWUFBWSxhQUFhQyxXQUFXQyxRQUFRLG1EQUFtRDtBQUV2SCxTQUFTRDtJQUNQLElBQUksQ0FBQ0UsR0FBRyxHQUFHLElBQUlIO0FBQ2pCO0FBRUFDLFNBQVNHLFNBQVMsQ0FBQ0MsR0FBRyxHQUFHLFNBQVVDLEdBQUc7SUFDcEMsT0FBTyxJQUFJLENBQUNILEdBQUcsQ0FBQ0UsR0FBRyxDQUFDQztBQUN0QjtBQUVBTCxTQUFTRyxTQUFTLENBQUNHLEdBQUcsR0FBRyxTQUFVRCxHQUFHLEVBQUVFLEtBQUs7SUFDM0MsSUFBSSxDQUFDTCxHQUFHLENBQUNJLEdBQUcsQ0FBQ0QsS0FBS0U7SUFDbEIsT0FBTyxJQUFJO0FBQ2I7QUFFQVAsU0FBU0csU0FBUyxDQUFDSyxHQUFHLEdBQUcsU0FBVUgsR0FBRztJQUNwQyxPQUFPLElBQUksQ0FBQ0gsR0FBRyxDQUFDTSxHQUFHLENBQUNIO0FBQ3RCO0FBRUFMLFNBQVNHLFNBQVMsQ0FBQ00sS0FBSyxHQUFHLFlBQzNCLEdBQUcsc0NBQXNDO0FBR3pDLFNBQVNSO0lBQ1AsSUFBSSxDQUFDUyxJQUFJLEdBQUcsRUFBRTtJQUNkLElBQUksQ0FBQ0MsTUFBTSxHQUFHLEVBQUU7QUFDbEI7QUFFQVYsT0FBT0UsU0FBUyxDQUFDQyxHQUFHLEdBQUcsU0FBVUMsR0FBRztJQUNsQyxPQUFPLElBQUksQ0FBQ0ssSUFBSSxDQUFDRSxPQUFPLENBQUNQLFNBQVMsQ0FBQztBQUNyQztBQUVBSixPQUFPRSxTQUFTLENBQUNHLEdBQUcsR0FBRyxTQUFVRCxHQUFHLEVBQUVFLEtBQUs7SUFDekMsSUFBSU0sUUFBUSxJQUFJLENBQUNILElBQUksQ0FBQ0UsT0FBTyxDQUFDUDtJQUU5QixJQUFJUSxVQUFVLENBQUMsR0FBRztRQUNoQixJQUFJLENBQUNILElBQUksQ0FBQ0ksSUFBSSxDQUFDVDtRQUNmLElBQUksQ0FBQ00sTUFBTSxDQUFDRyxJQUFJLENBQUNQO0lBQ25CLE9BQU87UUFDTCxJQUFJLENBQUNJLE1BQU0sQ0FBQ0UsTUFBTSxHQUFHTjtJQUN2QjtJQUVBLE9BQU8sSUFBSTtBQUNiO0FBRUFOLE9BQU9FLFNBQVMsQ0FBQ0ssR0FBRyxHQUFHLFNBQVVILEdBQUc7SUFDbEMsSUFBSVEsUUFBUSxJQUFJLENBQUNILElBQUksQ0FBQ0UsT0FBTyxDQUFDUDtJQUM5QixPQUFPUSxVQUFVLENBQUMsSUFBSUUsWUFBWSxJQUFJLENBQUNKLE1BQU0sQ0FBQ0UsTUFBTTtBQUN0RDtBQUVBWixPQUFPRSxTQUFTLENBQUNNLEtBQUssR0FBRztJQUN2QixJQUFJLENBQUNDLElBQUksR0FBRyxFQUFFO0lBQ2QsSUFBSSxDQUFDQyxNQUFNLEdBQUcsRUFBRTtBQUNsQixHQUNBLCtCQUErQiIsInNvdXJjZXMiOlsid2VicGFjazovL29saS1jcm9zc2xhbmQtdmlkZW9ncmFwaHkvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVmcmFjdG9yL2xpYi9tYXAuanM/NDUyYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBXZWlyZCBcIm1hcFwiIHBvbHlmaWxsLCB0aGF0J3Mgd2VhayBpZiBwb3NzaWJsZVxuICovXG5tb2R1bGUuZXhwb3J0cyA9IHR5cGVvZiBXZWFrTWFwID09PSAnZnVuY3Rpb24nID8gSGFwcHlNYXAgOiBTYWRNYXA7IC8vIEhhcHB5IHBhdGghIEZha2VzIGEgYGNsZWFyKClgIGlmIHBvc3NpYmxlIChub29wKVxuXG5mdW5jdGlvbiBIYXBweU1hcCgpIHtcbiAgdGhpcy5tYXAgPSBuZXcgV2Vha01hcCgpO1xufVxuXG5IYXBweU1hcC5wcm90b3R5cGUuaGFzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gdGhpcy5tYXAuaGFzKGtleSk7XG59O1xuXG5IYXBweU1hcC5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24gKGtleSwgdmFsdWUpIHtcbiAgdGhpcy5tYXAuc2V0KGtleSwgdmFsdWUpO1xuICByZXR1cm4gdGhpcztcbn07XG5cbkhhcHB5TWFwLnByb3RvdHlwZS5nZXQgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiB0aGlzLm1hcC5nZXQoa2V5KTtcbn07XG5cbkhhcHB5TWFwLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uICgpIHsvLyBpbnRlbnRpb25hbCBub29wLCBzaW5jZSB3ZSBkb250IG5lZWQgdG8vY2FudCBjbGVhclxufTsgLy8gU2FkIHBhdGghIFVzZSBsZXNzIHN0eWxpc2ggYXBwcm9hY2hcblxuXG5mdW5jdGlvbiBTYWRNYXAoKSB7XG4gIHRoaXMua2V5cyA9IFtdO1xuICB0aGlzLnZhbHVlcyA9IFtdO1xufVxuXG5TYWRNYXAucHJvdG90eXBlLmhhcyA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgcmV0dXJuIHRoaXMua2V5cy5pbmRleE9mKGtleSkgIT09IC0xO1xufTtcblxuU2FkTWFwLnByb3RvdHlwZS5zZXQgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICB2YXIgaW5kZXggPSB0aGlzLmtleXMuaW5kZXhPZihrZXkpO1xuXG4gIGlmIChpbmRleCA9PT0gLTEpIHtcbiAgICB0aGlzLmtleXMucHVzaChrZXkpO1xuICAgIHRoaXMudmFsdWVzLnB1c2godmFsdWUpO1xuICB9IGVsc2Uge1xuICAgIHRoaXMudmFsdWVzW2luZGV4XSA9IHZhbHVlO1xuICB9XG5cbiAgcmV0dXJuIHRoaXM7XG59O1xuXG5TYWRNYXAucHJvdG90eXBlLmdldCA9IGZ1bmN0aW9uIChrZXkpIHtcbiAgdmFyIGluZGV4ID0gdGhpcy5rZXlzLmluZGV4T2Yoa2V5KTtcbiAgcmV0dXJuIGluZGV4ID09PSAtMSA/IHVuZGVmaW5lZCA6IHRoaXMudmFsdWVzW2luZGV4XTtcbn07XG5cblNhZE1hcC5wcm90b3R5cGUuY2xlYXIgPSBmdW5jdGlvbiAoKSB7XG4gIHRoaXMua2V5cyA9IFtdO1xuICB0aGlzLnZhbHVlcyA9IFtdO1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1hcC5qcy5tYXAiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIldlYWtNYXAiLCJIYXBweU1hcCIsIlNhZE1hcCIsIm1hcCIsInByb3RvdHlwZSIsImhhcyIsImtleSIsInNldCIsInZhbHVlIiwiZ2V0IiwiY2xlYXIiLCJrZXlzIiwidmFsdWVzIiwiaW5kZXhPZiIsImluZGV4IiwicHVzaCIsInVuZGVmaW5lZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-refractor/lib/map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-refractor/lib/mapChildren.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-refractor/lib/mapChildren.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nfunction mapChild(child, i, depth) {\n    if (child.tagName) {\n        var className = child.properties && Array.isArray(child.properties.className) ? child.properties.className.join(\" \") : child.properties.className;\n        return React.createElement(child.tagName, Object.assign({\n            key: \"fract-\".concat(depth, \"-\").concat(i)\n        }, child.properties, {\n            className: className\n        }), child.children && child.children.map(mapWithDepth(depth + 1)));\n    }\n    return child.value;\n}\nfunction mapWithDepth(depth) {\n    return function mapChildrenWithDepth(child, i) {\n        return mapChild(child, i, depth);\n    };\n}\nexports.depth = mapWithDepth; //# sourceMappingURL=mapChildren.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVmcmFjdG9yL2xpYi9tYXBDaGlsZHJlbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUViLElBQUlBLFFBQVFDLG1CQUFPQSxDQUFDO0FBRXBCLFNBQVNDLFNBQVNDLEtBQUssRUFBRUMsQ0FBQyxFQUFFQyxLQUFLO0lBQy9CLElBQUlGLE1BQU1HLE9BQU8sRUFBRTtRQUNqQixJQUFJQyxZQUFZSixNQUFNSyxVQUFVLElBQUlDLE1BQU1DLE9BQU8sQ0FBQ1AsTUFBTUssVUFBVSxDQUFDRCxTQUFTLElBQUlKLE1BQU1LLFVBQVUsQ0FBQ0QsU0FBUyxDQUFDSSxJQUFJLENBQUMsT0FBT1IsTUFBTUssVUFBVSxDQUFDRCxTQUFTO1FBQ2pKLE9BQU9QLE1BQU1ZLGFBQWEsQ0FBQ1QsTUFBTUcsT0FBTyxFQUFFTyxPQUFPQyxNQUFNLENBQUM7WUFDdERDLEtBQUssU0FBU0MsTUFBTSxDQUFDWCxPQUFPLEtBQUtXLE1BQU0sQ0FBQ1o7UUFDMUMsR0FBR0QsTUFBTUssVUFBVSxFQUFFO1lBQ25CRCxXQUFXQTtRQUNiLElBQUlKLE1BQU1jLFFBQVEsSUFBSWQsTUFBTWMsUUFBUSxDQUFDQyxHQUFHLENBQUNDLGFBQWFkLFFBQVE7SUFDaEU7SUFFQSxPQUFPRixNQUFNaUIsS0FBSztBQUNwQjtBQUVBLFNBQVNELGFBQWFkLEtBQUs7SUFDekIsT0FBTyxTQUFTZ0IscUJBQXFCbEIsS0FBSyxFQUFFQyxDQUFDO1FBQzNDLE9BQU9GLFNBQVNDLE9BQU9DLEdBQUdDO0lBQzVCO0FBQ0Y7QUFFQWlCLGFBQWEsR0FBR0gsY0FDaEIsdUNBQXVDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vb2xpLWNyb3NzbGFuZC12aWRlb2dyYXBoeS8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWZyYWN0b3IvbGliL21hcENoaWxkcmVuLmpzPzYwODYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5cbmZ1bmN0aW9uIG1hcENoaWxkKGNoaWxkLCBpLCBkZXB0aCkge1xuICBpZiAoY2hpbGQudGFnTmFtZSkge1xuICAgIHZhciBjbGFzc05hbWUgPSBjaGlsZC5wcm9wZXJ0aWVzICYmIEFycmF5LmlzQXJyYXkoY2hpbGQucHJvcGVydGllcy5jbGFzc05hbWUpID8gY2hpbGQucHJvcGVydGllcy5jbGFzc05hbWUuam9pbignICcpIDogY2hpbGQucHJvcGVydGllcy5jbGFzc05hbWU7XG4gICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoY2hpbGQudGFnTmFtZSwgT2JqZWN0LmFzc2lnbih7XG4gICAgICBrZXk6IFwiZnJhY3QtXCIuY29uY2F0KGRlcHRoLCBcIi1cIikuY29uY2F0KGkpXG4gICAgfSwgY2hpbGQucHJvcGVydGllcywge1xuICAgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVcbiAgICB9KSwgY2hpbGQuY2hpbGRyZW4gJiYgY2hpbGQuY2hpbGRyZW4ubWFwKG1hcFdpdGhEZXB0aChkZXB0aCArIDEpKSk7XG4gIH1cblxuICByZXR1cm4gY2hpbGQudmFsdWU7XG59XG5cbmZ1bmN0aW9uIG1hcFdpdGhEZXB0aChkZXB0aCkge1xuICByZXR1cm4gZnVuY3Rpb24gbWFwQ2hpbGRyZW5XaXRoRGVwdGgoY2hpbGQsIGkpIHtcbiAgICByZXR1cm4gbWFwQ2hpbGQoY2hpbGQsIGksIGRlcHRoKTtcbiAgfTtcbn1cblxuZXhwb3J0cy5kZXB0aCA9IG1hcFdpdGhEZXB0aDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1hcENoaWxkcmVuLmpzLm1hcCJdLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJtYXBDaGlsZCIsImNoaWxkIiwiaSIsImRlcHRoIiwidGFnTmFtZSIsImNsYXNzTmFtZSIsInByb3BlcnRpZXMiLCJBcnJheSIsImlzQXJyYXkiLCJqb2luIiwiY3JlYXRlRWxlbWVudCIsIk9iamVjdCIsImFzc2lnbiIsImtleSIsImNvbmNhdCIsImNoaWxkcmVuIiwibWFwIiwibWFwV2l0aERlcHRoIiwidmFsdWUiLCJtYXBDaGlsZHJlbldpdGhEZXB0aCIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-refractor/lib/mapChildren.js\n");

/***/ })

};
;